// @fancyapps/ui/Fancybox v4.0.26
!(function(t, e) { typeof exports === 'object' && typeof module !== 'undefined' ? e(exports) : typeof define === 'function' && define.amd ? define(['exports'], e) : e((t = typeof globalThis !== 'undefined' ? globalThis : t || self).window = t.window || {}); }(this, t => { function e(t, e) { const i = Object.keys(t); if (Object.getOwnPropertySymbols) { let n = Object.getOwnPropertySymbols(t); e && (n = n.filter(e => { return Object.getOwnPropertyDescriptor(t, e).enumerable; })), i.push.apply(i, n); } return i; } function i(t) { for (let i = 1; i < arguments.length; i++) { var n = arguments[i] != null ? arguments[i] : {}; i % 2 ? e(Object(n), !0).forEach(e => { r(t, e, n[e]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : e(Object(n)).forEach(e => { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e)); }); } return t; } function n(t) { return n = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(t) { return typeof t; } : function(t) { return t && typeof Symbol === 'function' && t.constructor === Symbol && t !== Symbol.prototype ? 'symbol' : typeof t; }, n(t); } function o(t, e) { if (!(t instanceof e)) throw new TypeError('Cannot call a class as a function'); } function a(t, e) { for (let i = 0; i < e.length; i++) { const n = e[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, 'value' in n && (n.writable = !0), Object.defineProperty(t, n.key, n); } } function s(t, e, i) { return e && a(t.prototype, e), i && a(t, i), Object.defineProperty(t, 'prototype', {writable: !1}), t; } function r(t, e, i) { return e in t ? Object.defineProperty(t, e, {value: i, enumerable: !0, configurable: !0, writable: !0}) : t[e] = i, t; } function l(t, e) { if (typeof e !== 'function' && e !== null) throw new TypeError('Super expression must either be null or a function'); t.prototype = Object.create(e && e.prototype, {constructor: {value: t, writable: !0, configurable: !0}}), Object.defineProperty(t, 'prototype', {writable: !1}), e && h(t, e); } function c(t) { return c = Object.setPrototypeOf ? Object.getPrototypeOf : function(t) { return t.__proto__ || Object.getPrototypeOf(t); }, c(t); } function h(t, e) { return h = Object.setPrototypeOf || function(t, e) { return t.__proto__ = e, t; }, h(t, e); } function d(t) { if (void 0 === t) throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called'); return t; } function u(t, e) { if (e && (typeof e === 'object' || typeof e === 'function')) return e; if (void 0 !== e) throw new TypeError('Derived constructors may only return object or undefined'); return d(t); } function f(t) { const e = (function() { if (typeof Reflect === 'undefined' || !Reflect.construct) return !1; if (Reflect.construct.sham) return !1; if (typeof Proxy === 'function') return !0; try { return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], () => {})), !0; } catch (t) { return !1; } }()); return function() { let i; const n = c(t); if (e) { const o = c(this).constructor; i = Reflect.construct(n, arguments, o); } else i = n.apply(this, arguments); return u(this, i); }; } function v(t, e) { for (;!Object.prototype.hasOwnProperty.call(t, e) && (t = c(t)) !== null;);return t; } function p() { return p = typeof Reflect !== 'undefined' && Reflect.get ? Reflect.get : function(t, e, i) { const n = v(t, e); if (n) { const o = Object.getOwnPropertyDescriptor(n, e); return o.get ? o.get.call(arguments.length < 3 ? t : i) : o.value; } }, p.apply(this, arguments); } function g(t, e) { return (function(t) { if (Array.isArray(t)) return t; }(t)) || (function(t, e) { let i = t == null ? null : typeof Symbol !== 'undefined' && t[Symbol.iterator] || t['@@iterator']; if (i == null) return; let n, o; const a = []; let s = !0; let r = !1; try { for (i = i.call(t); !(s = (n = i.next()).done) && (a.push(n.value), !e || a.length !== e); s = !0); } catch (t) { r = !0, o = t; } finally { try { s || i.return == null || i.return(); } finally { if (r) throw o; } } return a; }(t, e)) || y(t, e) || (function() { throw new TypeError('Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'); }()); } function m(t) { return (function(t) { if (Array.isArray(t)) return b(t); }(t)) || (function(t) { if (typeof Symbol !== 'undefined' && t[Symbol.iterator] != null || t['@@iterator'] != null) return Array.from(t); }(t)) || y(t) || (function() { throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'); }()); } function y(t, e) { if (t) { if (typeof t === 'string') return b(t, e); let i = Object.prototype.toString.call(t).slice(8, -1); return i === 'Object' && t.constructor && (i = t.constructor.name), i === 'Map' || i === 'Set' ? Array.from(t) : i === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? b(t, e) : void 0; } } function b(t, e) { (e == null || e > t.length) && (e = t.length); for (var i = 0, n = new Array(e); i < e; i++)n[i] = t[i]; return n; } function x(t, e) { let i = typeof Symbol !== 'undefined' && t[Symbol.iterator] || t['@@iterator']; if (!i) { if (Array.isArray(t) || (i = y(t)) || e && t && typeof t.length === 'number') { i && (t = i); let n = 0; const o = function() {}; return {s: o, n: function() { return n >= t.length ? {done: !0} : {done: !1, value: t[n++]}; }, e: function(t) { throw t; }, f: o}; } throw new TypeError('Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.'); } let a; let s = !0; let r = !1; return {s: function() { i = i.call(t); }, n: function() { const t = i.next(); return s = t.done, t; }, e: function(t) { r = !0, a = t; }, f: function() { try { s || i.return == null || i.return(); } finally { if (r) throw a; } }}; } const w = function(t) { return n(t) === 'object' && t !== null && t.constructor === Object && Object.prototype.toString.call(t) === '[object Object]'; }; const k = function t() { for (var e = !1, i = arguments.length, o = new Array(i), a = 0; a < i; a++)o[a] = arguments[a]; typeof o[0] === 'boolean' && (e = o.shift()); const s = o[0]; if (!s || n(s) !== 'object') throw new Error('extendee must be an object'); for (let r = o.slice(1), l = r.length, c = 0; c < l; c++) { const h = r[c]; for (const d in h) if (h.hasOwnProperty(d)) { const u = h[d]; if (e && (Array.isArray(u) || w(u))) { const f = Array.isArray(u) ? [] : {}; s[d] = t(!0, s.hasOwnProperty(d) ? s[d] : f, u); } else s[d] = u; } } return s; }; const S = function(t) { const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1e4; return t = parseFloat(t) || 0, Math.round((t + Number.EPSILON) * e) / e; }; const C = function t(e) { return !!(e && n(e) === 'object' && e instanceof Element && e !== document.body) && (!e.__Panzoom && ((function(t) { const e = getComputedStyle(t)['overflow-y']; const i = getComputedStyle(t)['overflow-x']; const n = (e === 'scroll' || e === 'auto') && Math.abs(t.scrollHeight - t.clientHeight) > 1; const o = (i === 'scroll' || i === 'auto') && Math.abs(t.scrollWidth - t.clientWidth) > 1; return n || o; }(e)) ? e : t(e.parentNode))); }; const $ = typeof window !== 'undefined' && window.ResizeObserver || (function() { function t(e) { o(this, t), this.observables = [], this.boundCheck = this.check.bind(this), this.boundCheck(), this.callback = e; } return s(t, [{key: 'observe', value: function(t) { if (!this.observables.some(e => { return e.el === t; })) { const e = {el: t, size: {height: t.clientHeight, width: t.clientWidth}}; this.observables.push(e); } }}, {key: 'unobserve', value: function(t) { this.observables = this.observables.filter(e => { return e.el !== t; }); }}, {key: 'disconnect', value: function() { this.observables = []; }}, {key: 'check', value: function() { const t = this.observables.filter(t => { const e = t.el.clientHeight; const i = t.el.clientWidth; if (t.size.height !== e || t.size.width !== i) return t.size.height = e, t.size.width = i, !0; }).map(t => { return t.el; }); t.length > 0 && this.callback(t), window.requestAnimationFrame(this.boundCheck); }}]), t; }()); const E = s(function t(e) { o(this, t), this.id = self.Touch && e instanceof Touch ? e.identifier : -1, this.pageX = e.pageX, this.pageY = e.pageY, this.clientX = e.clientX, this.clientY = e.clientY; }); const P = function(t, e) { return e ? Math.sqrt(Math.pow(e.clientX - t.clientX, 2) + Math.pow(e.clientY - t.clientY, 2)) : 0; }; const T = function(t, e) { return e ? {clientX: (t.clientX + e.clientX) / 2, clientY: (t.clientY + e.clientY) / 2} : t; }; const L = function(t) { return 'changedTouches' in t; }; const _ = (function() { function t(e) { const i = this; const n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; const a = n.start; const s = void 0 === a ? function() { return !0; } : a; const r = n.move; const l = void 0 === r ? function() {} : r; const c = n.end; const h = void 0 === c ? function() {} : c; o(this, t), this._element = e, this.startPointers = [], this.currentPointers = [], this._pointerStart = function(t) { if (!(t.buttons > 0 && t.button !== 0)) { const e = new E(t); i.currentPointers.some(t => { return t.id === e.id; }) || i._triggerPointerStart(e, t) && (window.addEventListener('mousemove', i._move), window.addEventListener('mouseup', i._pointerEnd)); } }, this._touchStart = function(t) { for (let e = 0, n = Array.from(t.changedTouches || []); e < n.length; e++) { const o = n[e]; i._triggerPointerStart(new E(o), t); } }, this._move = function(t) { let e; const n = i.currentPointers.slice(); const o = L(t) ? Array.from(t.changedTouches).map(t => { return new E(t); }) : [new E(t)]; const a = []; const s = x(o); try { const r = function() { const t = e.value; const n = i.currentPointers.findIndex(e => { return e.id === t.id; }); if (n < 0) return 'continue'; a.push(t), i.currentPointers[n] = t; }; for (s.s(); !(e = s.n()).done;)r(); } catch (t) { s.e(t); } finally { s.f(); }i._moveCallback(n, i.currentPointers.slice(), t); }, this._triggerPointerEnd = function(t, e) { const n = i.currentPointers.findIndex(e => { return e.id === t.id; }); return !(n < 0) && (i.currentPointers.splice(n, 1), i.startPointers.splice(n, 1), i._endCallback(t, e), !0); }, this._pointerEnd = function(t) { t.buttons > 0 && t.button !== 0 || i._triggerPointerEnd(new E(t), t) && (window.removeEventListener('mousemove', i._move, {passive: !1}), window.removeEventListener('mouseup', i._pointerEnd, {passive: !1})); }, this._touchEnd = function(t) { for (let e = 0, n = Array.from(t.changedTouches || []); e < n.length; e++) { const o = n[e]; i._triggerPointerEnd(new E(o), t); } }, this._startCallback = s, this._moveCallback = l, this._endCallback = h, this._element.addEventListener('mousedown', this._pointerStart, {passive: !1}), this._element.addEventListener('touchstart', this._touchStart, {passive: !1}), this._element.addEventListener('touchmove', this._move, {passive: !1}), this._element.addEventListener('touchend', this._touchEnd), this._element.addEventListener('touchcancel', this._touchEnd); } return s(t, [{key: 'stop', value: function() { this._element.removeEventListener('mousedown', this._pointerStart, {passive: !1}), this._element.removeEventListener('touchstart', this._touchStart, {passive: !1}), this._element.removeEventListener('touchmove', this._move, {passive: !1}), this._element.removeEventListener('touchend', this._touchEnd), this._element.removeEventListener('touchcancel', this._touchEnd), window.removeEventListener('mousemove', this._move), window.removeEventListener('mouseup', this._pointerEnd); }}, {key: '_triggerPointerStart', value: function(t, e) { return !!this._startCallback(t, e) && (this.currentPointers.push(t), this.startPointers.push(t), !0); }}]), t; }()); const A = function(t, e) { return t.split('.').reduce((t, e) => { return t && t[e]; }, e); }; const O = (function() { function t() { const e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; o(this, t), this.options = k(!0, {}, e), this.plugins = [], this.events = {}; for (let i = 0, n = ['on', 'once']; i < n.length; i++) for (let a = n[i], s = 0, r = Object.entries(this.options[a] || {}); s < r.length; s++) { const l = r[s]; this[a].apply(this, m(l)); } } return s(t, [{key: 'option', value: function(t, e) { t = String(t); let i = A(t, this.options); if (typeof i === 'function') { for (var n, o = arguments.length, a = new Array(o > 2 ? o - 2 : 0), s = 2; s < o; s++)a[s - 2] = arguments[s]; i = (n = i).call.apply(n, [this, this].concat(a)); } return void 0 === i ? e : i; }}, {key: 'localize', value: function(t) { const e = this; const i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : []; return t = (t = String(t).replace(/\{\{(\w+).?(\w+)?\}\}/g, (t, n, o) => { let a = ''; o ? a = e.option(''.concat(n[0] + n.toLowerCase().substring(1), '.l10n.').concat(o)) : n && (a = e.option('l10n.'.concat(n))), a || (a = t); for (let s = 0; s < i.length; s++)a = a.split(i[s][0]).join(i[s][1]); return a; })).replace(/\{\{(.*)\}\}/, (t, e) => { return e; }); }}, {key: 'on', value: function(t, e) { const i = this; if (w(t)) { for (let n = 0, o = Object.entries(t); n < o.length; n++) { const a = o[n]; this.on.apply(this, m(a)); } return this; } return String(t).split(' ').forEach(t => { const n = i.events[t] = i.events[t] || []; n.indexOf(e) == -1 && n.push(e); }), this; }}, {key: 'once', value: function(t, e) { const i = this; if (w(t)) { for (let n = 0, o = Object.entries(t); n < o.length; n++) { const a = o[n]; this.once.apply(this, m(a)); } return this; } return String(t).split(' ').forEach(t => { const n = function n() { i.off(t, n); for (var o = arguments.length, a = new Array(o), s = 0; s < o; s++)a[s] = arguments[s]; e.call.apply(e, [i, i].concat(a)); }; n._ = e, i.on(t, n); }), this; }}, {key: 'off', value: function(t, e) { const i = this; if (!w(t)) return t.split(' ').forEach(t => { const n = i.events[t]; if (!n || !n.length) return i; for (var o = -1, a = 0, s = n.length; a < s; a++) { const r = n[a]; if (r && (r === e || r._ === e)) { o = a; break; } }o != -1 && n.splice(o, 1); }), this; for (let n = 0, o = Object.entries(t); n < o.length; n++) { const a = o[n]; this.off.apply(this, m(a)); } }}, {key: 'trigger', value: function(t) { for (var e = arguments.length, i = new Array(e > 1 ? e - 1 : 0), n = 1; n < e; n++)i[n - 1] = arguments[n]; let o; const a = x(m(this.events[t] || []).slice()); try { for (a.s(); !(o = a.n()).done;) { const s = o.value; if (s && !1 === s.call.apply(s, [this, this].concat(i))) return !1; } } catch (t) { a.e(t); } finally { a.f(); } let r; const l = x(m(this.events['*'] || []).slice()); try { for (l.s(); !(r = l.n()).done;) { const c = r.value; if (c && !1 === c.call.apply(c, [this, t, this].concat(i))) return !1; } } catch (t) { l.e(t); } finally { l.f(); } return !0; }}, {key: 'attachPlugins', value: function(t) { for (var e = {}, i = 0, n = Object.entries(t || {}); i < n.length; i++) { const o = g(n[i], 2); const a = o[0]; const s = o[1]; !1 === this.options[a] || this.plugins[a] || (this.options[a] = k({}, s.defaults || {}, this.options[a]), e[a] = new s(this)); } for (let r = 0, l = Object.entries(e); r < l.length; r++) { const c = g(l[r], 2); c[0], c[1].attach(this); } return this.plugins = Object.assign({}, this.plugins, e), this; }}, {key: 'detachPlugins', value: function() { for (const t in this.plugins) { let e = void 0; (e = this.plugins[t]) && typeof e.detach === 'function' && e.detach(this); } return this.plugins = {}, this; }}]), t; }()); const z = {touch: !0, zoom: !0, pinchToZoom: !0, panOnlyZoomed: !1, lockAxis: !1, friction: .64, decelFriction: .88, zoomFriction: .74, bounceForce: .2, baseScale: 1, minScale: 1, maxScale: 2, step: .5, textSelection: !1, click: 'toggleZoom', wheel: 'zoom', wheelFactor: 42, wheelLimit: 5, draggableClass: 'is-draggable', draggingClass: 'is-dragging', ratio: 1}; const M = (function(t) { l(n, t); const e = f(n); function n(t) { let i; const a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; o(this, n), (i = e.call(this, k(!0, {}, z, a))).state = 'init', i.$container = t; for (let s = 0, r = ['onLoad', 'onWheel', 'onClick']; s < r.length; s++) { const l = r[s]; i[l] = i[l].bind(d(i)); } return i.initLayout(), i.resetValues(), i.attachPlugins(n.Plugins), i.trigger('init'), i.updateMetrics(), i.attachEvents(), i.trigger('ready'), !1 === i.option('centerOnStart') ? i.state = 'ready' : i.panTo({friction: 0}), t.__Panzoom = d(i), i; } return s(n, [{key: 'initLayout', value: function() { const t = this.$container; if (!(t instanceof HTMLElement)) throw new Error('Panzoom: Container not found'); const e = this.option('content') || t.querySelector('.panzoom__content'); if (!e) throw new Error('Panzoom: Content not found'); this.$content = e; let i; let n = this.option('viewport') || t.querySelector('.panzoom__viewport'); n || !1 === this.option('wrapInner') || ((n = document.createElement('div')).classList.add('panzoom__viewport'), (i = n).append.apply(i, m(t.childNodes)), t.appendChild(n)); this.$viewport = n || e.parentNode; }}, {key: 'resetValues', value: function() { this.updateRate = this.option('updateRate', /iPhone|iPad|iPod|Android/i.test(navigator.userAgent) ? 250 : 24), this.container = {width: 0, height: 0}, this.viewport = {width: 0, height: 0}, this.content = {origWidth: 0, origHeight: 0, width: 0, height: 0, x: this.option('x', 0), y: this.option('y', 0), scale: this.option('baseScale')}, this.transform = {x: 0, y: 0, scale: 1}, this.resetDragPosition(); }}, {key: 'onLoad', value: function(t) { this.updateMetrics(), this.panTo({scale: this.option('baseScale'), friction: 0}), this.trigger('load', t); }}, {key: 'onClick', value: function(t) { if (!t.defaultPrevented) if (this.option('textSelection') && window.getSelection().toString().length)t.stopPropagation(); else { const e = this.$content.getClientRects()[0]; if (this.state !== 'ready' && (this.dragPosition.midPoint || Math.abs(e.top - this.dragStart.rect.top) > 1 || Math.abs(e.left - this.dragStart.rect.left) > 1)) return t.preventDefault(), void t.stopPropagation(); !1 !== this.trigger('click', t) && this.option('zoom') && this.option('click') === 'toggleZoom' && (t.preventDefault(), t.stopPropagation(), this.zoomWithClick(t)); } }}, {key: 'onWheel', value: function(t) { !1 !== this.trigger('wheel', t) && this.option('zoom') && this.option('wheel') && this.zoomWithWheel(t); }}, {key: 'zoomWithWheel', value: function(t) { void 0 === this.changedDelta && (this.changedDelta = 0); const e = Math.max(-1, Math.min(1, -t.deltaY || -t.deltaX || t.wheelDelta || -t.detail)); const i = this.content.scale; let n = i * (100 + e * this.option('wheelFactor')) / 100; if (e < 0 && Math.abs(i - this.option('minScale')) < .01 || e > 0 && Math.abs(i - this.option('maxScale')) < .01 ? (this.changedDelta += Math.abs(e), n = i) : (this.changedDelta = 0, n = Math.max(Math.min(n, this.option('maxScale')), this.option('minScale'))), !(this.changedDelta > this.option('wheelLimit')) && (t.preventDefault(), n !== i)) { const o = this.$content.getBoundingClientRect(); const a = t.clientX - o.left; const s = t.clientY - o.top; this.zoomTo(n, {x: a, y: s}); } }}, {key: 'zoomWithClick', value: function(t) { const e = this.$content.getClientRects()[0]; const i = t.clientX - e.left; const n = t.clientY - e.top; this.toggleZoom({x: i, y: n}); }}, {key: 'attachEvents', value: function() { const t = this; this.$content.addEventListener('load', this.onLoad), this.$container.addEventListener('wheel', this.onWheel, {passive: !1}), this.$container.addEventListener('click', this.onClick, {passive: !1}), this.initObserver(); var e = new _(this.$container, {start: function(i, n) { if (!t.option('touch')) return !1; if (t.velocity.scale < 0) return !1; const o = n.composedPath()[0]; if (!e.currentPointers.length) { if (['BUTTON', 'TEXTAREA', 'OPTION', 'INPUT', 'SELECT', 'VIDEO'].indexOf(o.nodeName) !== -1) return !1; if (t.option('textSelection') && (function(t, e, i) { for (let n = t.childNodes, o = document.createRange(), a = 0; a < n.length; a++) { const s = n[a]; if (s.nodeType === Node.TEXT_NODE) { o.selectNodeContents(s); const r = o.getBoundingClientRect(); if (e >= r.left && i >= r.top && e <= r.right && i <= r.bottom) return s; } } return !1; }(o, i.clientX, i.clientY))) return !1; } return !C(o) && (!1 !== t.trigger('touchStart', n) && (n.type === 'mousedown' && n.preventDefault(), t.state = 'pointerdown', t.resetDragPosition(), t.dragPosition.midPoint = null, t.dragPosition.time = Date.now(), !0)); }, move: function(i, n, o) { if (t.state === 'pointerdown') if (!1 !== t.trigger('touchMove', o)) { if (!(n.length < 2 && !0 === t.option('panOnlyZoomed') && t.content.width <= t.viewport.width && t.content.height <= t.viewport.height && t.transform.scale <= t.option('baseScale')) && (!(n.length > 1) || t.option('zoom') && !1 !== t.option('pinchToZoom'))) { const a = T(i[0], i[1]); const s = T(n[0], n[1]); const r = s.clientX - a.clientX; const l = s.clientY - a.clientY; const c = P(i[0], i[1]); const h = P(n[0], n[1]); const d = c && h ? h / c : 1; t.dragOffset.x += r, t.dragOffset.y += l, t.dragOffset.scale *= d, t.dragOffset.time = Date.now() - t.dragPosition.time; const u = t.dragStart.scale === 1 && t.option('lockAxis'); if (u && !t.lockAxis) { if (Math.abs(t.dragOffset.x) < 6 && Math.abs(t.dragOffset.y) < 6) return void o.preventDefault(); const f = Math.abs(180 * Math.atan2(t.dragOffset.y, t.dragOffset.x) / Math.PI); t.lockAxis = f > 45 && f < 135 ? 'y' : 'x'; } if (u === 'xy' || t.lockAxis !== 'y') { if (o.preventDefault(), o.stopPropagation(), o.stopImmediatePropagation(), t.lockAxis && (t.dragOffset[t.lockAxis === 'x' ? 'y' : 'x'] = 0), t.$container.classList.add(t.option('draggingClass')), t.transform.scale === t.option('baseScale') && t.lockAxis === 'y' || (t.dragPosition.x = t.dragStart.x + t.dragOffset.x), t.transform.scale === t.option('baseScale') && t.lockAxis === 'x' || (t.dragPosition.y = t.dragStart.y + t.dragOffset.y), t.dragPosition.scale = t.dragStart.scale * t.dragOffset.scale, n.length > 1) { const v = T(e.startPointers[0], e.startPointers[1]); const p = v.clientX - t.dragStart.rect.x; const g = v.clientY - t.dragStart.rect.y; const m = t.getZoomDelta(t.content.scale * t.dragOffset.scale, p, g); const y = m.deltaX; const b = m.deltaY; t.dragPosition.x -= y, t.dragPosition.y -= b, t.dragPosition.midPoint = s; } else t.setDragResistance(); t.transform = {x: t.dragPosition.x, y: t.dragPosition.y, scale: t.dragPosition.scale}, t.startAnimation(); } } } else o.preventDefault(); }, end: function(n, o) { if (t.state === 'pointerdown') if (t._dragOffset = i({}, t.dragOffset), e.currentPointers.length)t.resetDragPosition(); else if (t.state = 'decel', t.friction = t.option('decelFriction'), t.recalculateTransform(), t.$container.classList.remove(t.option('draggingClass')), !1 !== t.trigger('touchEnd', o) && t.state === 'decel') { const a = t.option('minScale'); if (t.transform.scale < a)t.zoomTo(a, {friction: .64}); else { const s = t.option('maxScale'); if (t.transform.scale - s > .01) { const r = t.dragPosition.midPoint || n; const l = t.$content.getClientRects()[0]; t.zoomTo(s, {friction: .64, x: r.clientX - l.left, y: r.clientY - l.top}); } else; } } }}); this.pointerTracker = e; }}, {key: 'initObserver', value: function() { const t = this; this.resizeObserver || (this.resizeObserver = new $(() => { t.updateTimer || (t.updateTimer = setTimeout(() => { const e = t.$container.getBoundingClientRect(); e.width && e.height ? ((Math.abs(e.width - t.container.width) > 1 || Math.abs(e.height - t.container.height) > 1) && (t.isAnimating() && t.endAnimation(!0), t.updateMetrics(), t.panTo({x: t.content.x, y: t.content.y, scale: t.option('baseScale'), friction: 0})), t.updateTimer = null) : t.updateTimer = null; }, t.updateRate)); }), this.resizeObserver.observe(this.$container)); }}, {key: 'resetDragPosition', value: function() { this.lockAxis = null, this.friction = this.option('friction'), this.velocity = {x: 0, y: 0, scale: 0}; const t = this.content; const e = t.x; const n = t.y; const o = t.scale; this.dragStart = {rect: this.$content.getBoundingClientRect(), x: e, y: n, scale: o}, this.dragPosition = i(i({}, this.dragPosition), {}, {x: e, y: n, scale: o}), this.dragOffset = {x: 0, y: 0, scale: 1, time: 0}; }}, {key: 'updateMetrics', value: function(t) { !0 !== t && this.trigger('beforeUpdate'); let e; const n = this.$container; const o = this.$content; const a = this.$viewport; const s = o instanceof HTMLImageElement; const r = this.option('zoom'); const l = this.option('resizeParent', r); let c = this.option('width'); let h = this.option('height'); let d = c || (e = o, Math.max(parseFloat(e.naturalWidth || 0), parseFloat(e.width && e.width.baseVal && e.width.baseVal.value || 0), parseFloat(e.offsetWidth || 0), parseFloat(e.scrollWidth || 0))); let u = h || (function(t) { return Math.max(parseFloat(t.naturalHeight || 0), parseFloat(t.height && t.height.baseVal && t.height.baseVal.value || 0), parseFloat(t.offsetHeight || 0), parseFloat(t.scrollHeight || 0)); }(o)); Object.assign(o.style, {width: c ? ''.concat(c, 'px') : '', height: h ? ''.concat(h, 'px') : '', maxWidth: '', maxHeight: ''}), l && Object.assign(a.style, {width: '', height: ''}); const f = this.option('ratio'); c = d = S(d * f), h = u = S(u * f); const v = o.getBoundingClientRect(); const p = a.getBoundingClientRect(); const g = a == n ? p : n.getBoundingClientRect(); let m = Math.max(a.offsetWidth, S(p.width)); let y = Math.max(a.offsetHeight, S(p.height)); const b = window.getComputedStyle(a); if (m -= parseFloat(b.paddingLeft) + parseFloat(b.paddingRight), y -= parseFloat(b.paddingTop) + parseFloat(b.paddingBottom), this.viewport.width = m, this.viewport.height = y, r) { if (Math.abs(d - v.width) > .1 || Math.abs(u - v.height) > .1) { const x = (function(t, e, i, n) { const o = Math.min(i / t || 0, n / e); return {width: t * o || 0, height: e * o || 0}; }(d, u, Math.min(d, v.width), Math.min(u, v.height))); c = S(x.width), h = S(x.height); }Object.assign(o.style, {width: ''.concat(c, 'px'), height: ''.concat(h, 'px'), transform: ''}); } if (l && (Object.assign(a.style, {width: ''.concat(c, 'px'), height: ''.concat(h, 'px')}), this.viewport = i(i({}, this.viewport), {}, {width: c, height: h})), s && r && typeof this.options.maxScale !== 'function') { const w = this.option('maxScale'); this.options.maxScale = function() { return this.content.origWidth > 0 && this.content.fitWidth > 0 ? this.content.origWidth / this.content.fitWidth : w; }; } this.content = i(i({}, this.content), {}, {origWidth: d, origHeight: u, fitWidth: c, fitHeight: h, width: c, height: h, scale: 1, isZoomable: r}), this.container = {width: g.width, height: g.height}, !0 !== t && this.trigger('afterUpdate'); }}, {key: 'zoomIn', value: function(t) { this.zoomTo(this.content.scale + (t || this.option('step'))); }}, {key: 'zoomOut', value: function(t) { this.zoomTo(this.content.scale - (t || this.option('step'))); }}, {key: 'toggleZoom', value: function() { const t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; const e = this.option('maxScale'); const i = this.option('baseScale'); const n = this.content.scale > i + .5 * (e - i) ? i : e; this.zoomTo(n, t); }}, {key: 'zoomTo', value: function() { let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.option('baseScale'); const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; const i = e.x; let n = void 0 === i ? null : i; const o = e.y; let a = void 0 === o ? null : o; t = Math.max(Math.min(t, this.option('maxScale')), this.option('minScale')); const s = S(this.content.scale / (this.content.width / this.content.fitWidth), 1e7); n === null && (n = this.content.width * s * .5), a === null && (a = this.content.height * s * .5); const r = this.getZoomDelta(t, n, a); const l = r.deltaX; const c = r.deltaY; n = this.content.x - l, a = this.content.y - c, this.panTo({x: n, y: a, scale: t, friction: this.option('zoomFriction')}); }}, {key: 'getZoomDelta', value: function(t) { const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; const i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0; const n = this.content.fitWidth * this.content.scale; const o = this.content.fitHeight * this.content.scale; const a = e > 0 && n ? e / n : 0; const s = i > 0 && o ? i / o : 0; const r = this.content.fitWidth * t; const l = this.content.fitHeight * t; const c = (r - n) * a; const h = (l - o) * s; return {deltaX: c, deltaY: h}; }}, {key: 'panTo', value: function() { const t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; const e = t.x; let n = void 0 === e ? this.content.x : e; const o = t.y; let a = void 0 === o ? this.content.y : o; let s = t.scale; const r = t.friction; const l = void 0 === r ? this.option('friction') : r; const c = t.ignoreBounds; const h = void 0 !== c && c; if (s = s || this.content.scale || 1, !h) { const d = this.getBounds(s); const u = d.boundX; const f = d.boundY; u && (n = Math.max(Math.min(n, u.to), u.from)), f && (a = Math.max(Math.min(a, f.to), f.from)); } this.friction = l, this.transform = i(i({}, this.transform), {}, {x: n, y: a, scale: s}), l ? (this.state = 'panning', this.velocity = {x: (1 / this.friction - 1) * (n - this.content.x), y: (1 / this.friction - 1) * (a - this.content.y), scale: (1 / this.friction - 1) * (s - this.content.scale)}, this.startAnimation()) : this.endAnimation(); }}, {key: 'startAnimation', value: function() { const t = this; this.rAF ? cancelAnimationFrame(this.rAF) : this.trigger('startAnimation'), this.rAF = requestAnimationFrame(() => { return t.animate(); }); }}, {key: 'animate', value: function() { const t = this; if (this.setEdgeForce(), this.setDragForce(), this.velocity.x *= this.friction, this.velocity.y *= this.friction, this.velocity.scale *= this.friction, this.content.x += this.velocity.x, this.content.y += this.velocity.y, this.content.scale += this.velocity.scale, this.isAnimating()) this.setTransform(); else if (this.state !== 'pointerdown') return void this.endAnimation(); this.rAF = requestAnimationFrame(() => { return t.animate(); }); }}, {key: 'getBounds', value: function(t) { let e = this.boundX; let i = this.boundY; if (void 0 !== e && void 0 !== i) return {boundX: e, boundY: i}; e = {from: 0, to: 0}, i = {from: 0, to: 0}, t = t || this.transform.scale; const n = this.content.fitWidth * t; const o = this.content.fitHeight * t; const a = this.viewport.width; const s = this.viewport.height; if (n < a) { const r = S(.5 * (a - n)); e.from = r, e.to = r; } else e.from = S(a - n); if (o < s) { const l = .5 * (s - o); i.from = l, i.to = l; } else i.from = S(s - o); return {boundX: e, boundY: i}; }}, {key: 'setEdgeForce', value: function() { if (this.state === 'decel') { let t, e, i, n; const o = this.option('bounceForce'); const a = this.getBounds(Math.max(this.transform.scale, this.content.scale)); const s = a.boundX; const r = a.boundY; if (s && (t = this.content.x < s.from, e = this.content.x > s.to), r && (i = this.content.y < r.from, n = this.content.y > r.to), t || e) { let l = ((t ? s.from : s.to) - this.content.x) * o; const c = this.content.x + (this.velocity.x + l) / this.friction; c >= s.from && c <= s.to && (l += this.velocity.x), this.velocity.x = l, this.recalculateTransform(); } if (i || n) { let h = ((i ? r.from : r.to) - this.content.y) * o; const d = this.content.y + (h + this.velocity.y) / this.friction; d >= r.from && d <= r.to && (h += this.velocity.y), this.velocity.y = h, this.recalculateTransform(); } } }}, {key: 'setDragResistance', value: function() { if (this.state === 'pointerdown') { let t, e, i, n; const o = this.getBounds(this.dragPosition.scale); const a = o.boundX; const s = o.boundY; if (a && (t = this.dragPosition.x < a.from, e = this.dragPosition.x > a.to), s && (i = this.dragPosition.y < s.from, n = this.dragPosition.y > s.to), (t || e) && (!t || !e)) { const r = t ? a.from : a.to; const l = r - this.dragPosition.x; this.dragPosition.x = r - .3 * l; } if ((i || n) && (!i || !n)) { const c = i ? s.from : s.to; const h = c - this.dragPosition.y; this.dragPosition.y = c - .3 * h; } } }}, {key: 'setDragForce', value: function() { this.state === 'pointerdown' && (this.velocity.x = this.dragPosition.x - this.content.x, this.velocity.y = this.dragPosition.y - this.content.y, this.velocity.scale = this.dragPosition.scale - this.content.scale); }}, {key: 'recalculateTransform', value: function() { this.transform.x = this.content.x + this.velocity.x / (1 / this.friction - 1), this.transform.y = this.content.y + this.velocity.y / (1 / this.friction - 1), this.transform.scale = this.content.scale + this.velocity.scale / (1 / this.friction - 1); }}, {key: 'isAnimating', value: function() { return !(!this.friction || !(Math.abs(this.velocity.x) > .05 || Math.abs(this.velocity.y) > .05 || Math.abs(this.velocity.scale) > .05)); }}, {key: 'setTransform', value: function(t) { let e, n, o, a, s; (t ? (e = S(this.transform.x), n = S(this.transform.y), o = this.transform.scale, this.content = i(i({}, this.content), {}, {x: e, y: n, scale: o})) : (e = S(this.content.x), n = S(this.content.y), o = this.content.scale / (this.content.width / this.content.fitWidth), this.content = i(i({}, this.content), {}, {x: e, y: n})), this.trigger('beforeTransform'), e = S(this.content.x), n = S(this.content.y), t && this.option('zoom')) ? (a = S(this.content.fitWidth * o), s = S(this.content.fitHeight * o), this.content.width = a, this.content.height = s, this.transform = i(i({}, this.transform), {}, {width: a, height: s, scale: o}), Object.assign(this.$content.style, {width: ''.concat(a, 'px'), height: ''.concat(s, 'px'), maxWidth: 'none', maxHeight: 'none', transform: 'translate3d('.concat(e, 'px, ').concat(n, 'px, 0) scale(1)')})) : this.$content.style.transform = 'translate3d('.concat(e, 'px, ').concat(n, 'px, 0) scale(').concat(o, ')'); this.trigger('afterTransform'); }}, {key: 'endAnimation', value: function(t) { cancelAnimationFrame(this.rAF), this.rAF = null, this.velocity = {x: 0, y: 0, scale: 0}, this.setTransform(!0), this.state = 'ready', this.handleCursor(), !0 !== t && this.trigger('endAnimation'); }}, {key: 'handleCursor', value: function() { const t = this.option('draggableClass'); t && this.option('touch') && (this.option('panOnlyZoomed') == 1 && this.content.width <= this.viewport.width && this.content.height <= this.viewport.height && this.transform.scale <= this.option('baseScale') ? this.$container.classList.remove(t) : this.$container.classList.add(t)); }}, {key: 'detachEvents', value: function() { this.$content.removeEventListener('load', this.onLoad), this.$container.removeEventListener('wheel', this.onWheel, {passive: !1}), this.$container.removeEventListener('click', this.onClick, {passive: !1}), this.pointerTracker && (this.pointerTracker.stop(), this.pointerTracker = null), this.resizeObserver && (this.resizeObserver.disconnect(), this.resizeObserver = null); }}, {key: 'destroy', value: function() { this.state !== 'destroy' && (this.state = 'destroy', clearTimeout(this.updateTimer), this.updateTimer = null, cancelAnimationFrame(this.rAF), this.rAF = null, this.detachEvents(), this.detachPlugins(), this.resetDragPosition()); }}]), n; }(O)); M.version = '4.0.26', M.Plugins = {}; const I = function(t, e) { let i = 0; return function() { const n = new Date().getTime(); if (!(n - i < e)) return i = n, t.apply(void 0, arguments); }; }; const F = (function() { function t(e) { o(this, t), this.$container = null, this.$prev = null, this.$next = null, this.carousel = e, this.onRefresh = this.onRefresh.bind(this); } return s(t, [{key: 'option', value: function(t) { return this.carousel.option('Navigation.'.concat(t)); }}, {key: 'createButton', value: function(t) { let e; const i = this; const n = document.createElement('button'); n.setAttribute('title', this.carousel.localize('{{'.concat(t.toUpperCase(), '}}'))); const o = this.option('classNames.button') + ' ' + this.option('classNames.'.concat(t)); return (e = n.classList).add.apply(e, m(o.split(' '))), n.setAttribute('tabindex', '0'), n.innerHTML = this.carousel.localize(this.option(''.concat(t, 'Tpl'))), n.addEventListener('click', e => { e.preventDefault(), e.stopPropagation(), i.carousel['slide'.concat(t === 'next' ? 'Next' : 'Prev')](); }), n; }}, {key: 'build', value: function() { let t; this.$container || (this.$container = document.createElement('div'), (t = this.$container.classList).add.apply(t, m(this.option('classNames.main').split(' '))), this.carousel.$container.appendChild(this.$container)); this.$next || (this.$next = this.createButton('next'), this.$container.appendChild(this.$next)), this.$prev || (this.$prev = this.createButton('prev'), this.$container.appendChild(this.$prev)); }}, {key: 'onRefresh', value: function() { const t = this.carousel.pages.length; t <= 1 || t > 1 && this.carousel.elemDimWidth < this.carousel.wrapDimWidth && !Number.isInteger(this.carousel.option('slidesPerPage')) ? this.cleanup() : (this.build(), this.$prev.removeAttribute('disabled'), this.$next.removeAttribute('disabled'), this.carousel.option('infiniteX', this.carousel.option('infinite')) || (this.carousel.page <= 0 && this.$prev.setAttribute('disabled', ''), this.carousel.page >= t - 1 && this.$next.setAttribute('disabled', ''))); }}, {key: 'cleanup', value: function() { this.$prev && this.$prev.remove(), this.$prev = null, this.$next && this.$next.remove(), this.$next = null, this.$container && this.$container.remove(), this.$container = null; }}, {key: 'attach', value: function() { this.carousel.on('refresh change', this.onRefresh); }}, {key: 'detach', value: function() { this.carousel.off('refresh change', this.onRefresh), this.cleanup(); }}]), t; }()); F.defaults = {prevTpl: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M15 3l-9 9 9 9"/></svg>', nextTpl: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M9 3l9 9-9 9"/></svg>', classNames: {main: 'carousel__nav', button: 'carousel__button', next: 'is-next', prev: 'is-prev'}}; const R = (function() { function t(e) { o(this, t), this.carousel = e, this.$list = null, this.events = {change: this.onChange.bind(this), refresh: this.onRefresh.bind(this)}; } return s(t, [{key: 'buildList', value: function() { const t = this; if (!(this.carousel.pages.length < this.carousel.option('Dots.minSlideCount'))) { const e = document.createElement('ol'); return e.classList.add('carousel__dots'), e.addEventListener('click', e => { if ('page' in e.target.dataset) { e.preventDefault(), e.stopPropagation(); const i = parseInt(e.target.dataset.page, 10); const n = t.carousel; i !== n.page && (n.pages.length < 3 && n.option('infinite') ? n[i == 0 ? 'slidePrev' : 'slideNext']() : n.slideTo(i)); } }), this.$list = e, this.carousel.$container.appendChild(e), this.carousel.$container.classList.add('has-dots'), e; } }}, {key: 'removeList', value: function() { this.$list && (this.$list.parentNode.removeChild(this.$list), this.$list = null), this.carousel.$container.classList.remove('has-dots'); }}, {key: 'rebuildDots', value: function() { const t = this; let e = this.$list; const i = !!e; const n = this.carousel.pages.length; if (n < 2)i && this.removeList(); else { i || (e = this.buildList()); const o = this.$list.children.length; if (o > n) for (let a = n; a < o; a++) this.$list.removeChild(this.$list.lastChild); else { for (let s = function(e) { const i = document.createElement('li'); i.classList.add('carousel__dot'), i.dataset.page = e, i.setAttribute('role', 'button'), i.setAttribute('tabindex', '0'), i.setAttribute('title', t.carousel.localize('{{GOTO}}', [['%d', e + 1]])), i.addEventListener('keydown', t => { let e; const n = t.code; n === 'Enter' || n === 'NumpadEnter' ? e = i : n === 'ArrowRight' ? e = i.nextSibling : n === 'ArrowLeft' && (e = i.previousSibling), e && e.click(); }), t.$list.appendChild(i); }, r = o; r < n; r++)s(r); this.setActiveDot(); } } }}, {key: 'setActiveDot', value: function() { if (this.$list) { this.$list.childNodes.forEach(t => { t.classList.remove('is-selected'); }); const t = this.$list.childNodes[this.carousel.page]; t && t.classList.add('is-selected'); } }}, {key: 'onChange', value: function() { this.setActiveDot(); }}, {key: 'onRefresh', value: function() { this.rebuildDots(); }}, {key: 'attach', value: function() { this.carousel.on(this.events); }}, {key: 'detach', value: function() { this.removeList(), this.carousel.off(this.events), this.carousel = null; }}]), t; }()); const N = (function() { function t(e) { o(this, t), this.carousel = e, this.selectedIndex = null, this.friction = 0, this.onNavReady = this.onNavReady.bind(this), this.onNavClick = this.onNavClick.bind(this), this.onNavCreateSlide = this.onNavCreateSlide.bind(this), this.onTargetChange = this.onTargetChange.bind(this); } return s(t, [{key: 'addAsTargetFor', value: function(t) { this.target = this.carousel, this.nav = t, this.attachEvents(); }}, {key: 'addAsNavFor', value: function(t) { this.target = t, this.nav = this.carousel, this.attachEvents(); }}, {key: 'attachEvents', value: function() { this.nav.options.initialSlide = this.target.options.initialPage, this.nav.on('ready', this.onNavReady), this.nav.on('createSlide', this.onNavCreateSlide), this.nav.on('Panzoom.click', this.onNavClick), this.target.on('change', this.onTargetChange), this.target.on('Panzoom.afterUpdate', this.onTargetChange); }}, {key: 'onNavReady', value: function() { this.onTargetChange(!0); }}, {key: 'onNavClick', value: function(t, e, i) { const n = i.target.closest('.carousel__slide'); if (n) { i.stopPropagation(); const o = parseInt(n.dataset.index, 10); const a = this.target.findPageForSlide(o); this.target.page !== a && this.target.slideTo(a, {friction: this.friction}), this.markSelectedSlide(o); } }}, {key: 'onNavCreateSlide', value: function(t, e) { e.index === this.selectedIndex && this.markSelectedSlide(e.index); }}, {key: 'onTargetChange', value: function() { const t = this.target.pages[this.target.page].indexes[0]; const e = this.nav.findPageForSlide(t); this.nav.slideTo(e), this.markSelectedSlide(t); }}, {key: 'markSelectedSlide', value: function(t) { this.selectedIndex = t, m(this.nav.slides).filter(t => { return t.$el && t.$el.classList.remove('is-nav-selected'); }); const e = this.nav.slides[t]; e && e.$el && e.$el.classList.add('is-nav-selected'); }}, {key: 'attach', value: function(t) { const e = t.options.Sync; (e.target || e.nav) && (e.target ? this.addAsNavFor(e.target) : e.nav && this.addAsTargetFor(e.nav), this.friction = e.friction); }}, {key: 'detach', value: function() { this.nav && (this.nav.off('ready', this.onNavReady), this.nav.off('Panzoom.click', this.onNavClick), this.nav.off('createSlide', this.onNavCreateSlide)), this.target && (this.target.off('Panzoom.afterUpdate', this.onTargetChange), this.target.off('change', this.onTargetChange)); }}]), t; }()); N.defaults = {friction: .92}; const D = {Navigation: F, Dots: R, Sync: N}; const B = {slides: [], preload: 0, slidesPerPage: 'auto', initialPage: null, initialSlide: null, friction: .92, center: !0, infinite: !0, fill: !0, dragFree: !1, prefix: '', classNames: {viewport: 'carousel__viewport', track: 'carousel__track', slide: 'carousel__slide', slideSelected: 'is-selected'}, l10n: {NEXT: 'Next slide', PREV: 'Previous slide', GOTO: 'Go to slide #%d'}}; const W = (function(t) { l(n, t); const e = f(n); function n(t) { let i; let a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; if (o(this, n), a = k(!0, {}, B, a), (i = e.call(this, a)).state = 'init', i.$container = t, !(i.$container instanceof HTMLElement)) throw new Error('No root element provided'); return i.slideNext = I(i.slideNext.bind(d(i)), 250), i.slidePrev = I(i.slidePrev.bind(d(i)), 250), i.init(), t.__Carousel = d(i), i; } return s(n, [{key: 'init', value: function() { this.pages = [], this.page = this.pageIndex = null, this.prevPage = this.prevPageIndex = null, this.attachPlugins(n.Plugins), this.trigger('init'), this.initLayout(), this.initSlides(), this.updateMetrics(), this.$track && this.pages.length && (this.$track.style.transform = 'translate3d('.concat(-1 * this.pages[this.page].left, 'px, 0px, 0) scale(1)')), this.manageSlideVisiblity(), this.initPanzoom(), this.state = 'ready', this.trigger('ready'); }}, {key: 'initLayout', value: function() { let t, e, i, n; const o = this.option('prefix'); const a = this.option('classNames'); (this.$viewport = this.option('viewport') || this.$container.querySelector('.'.concat(o).concat(a.viewport)), this.$viewport) || (this.$viewport = document.createElement('div'), (t = this.$viewport.classList).add.apply(t, m((o + a.viewport).split(' '))), (e = this.$viewport).append.apply(e, m(this.$container.childNodes)), this.$container.appendChild(this.$viewport)); (this.$track = this.option('track') || this.$container.querySelector('.'.concat(o).concat(a.track)), this.$track) || (this.$track = document.createElement('div'), (i = this.$track.classList).add.apply(i, m((o + a.track).split(' '))), (n = this.$track).append.apply(n, m(this.$viewport.childNodes)), this.$viewport.appendChild(this.$track)); }}, {key: 'initSlides', value: function() { const t = this; this.slides = [], this.$viewport.querySelectorAll('.'.concat(this.option('prefix')).concat(this.option('classNames.slide'))).forEach(e => { const i = {$el: e, isDom: !0}; t.slides.push(i), t.trigger('createSlide', i, t.slides.length); }), Array.isArray(this.options.slides) && (this.slides = k(!0, m(this.slides), this.options.slides)); }}, {key: 'updateMetrics', value: function() { let t; const e = this; let n = 0; const o = []; this.slides.forEach((i, a) => { const s = i.$el; const r = i.isDom || !t ? e.getSlideMetrics(s) : t; i.index = a, i.width = r, i.left = n, t = r, n += r, o.push(a); }); let a = Math.max(this.$track.offsetWidth, S(this.$track.getBoundingClientRect().width)); const s = getComputedStyle(this.$track); a -= parseFloat(s.paddingLeft) + parseFloat(s.paddingRight), this.contentWidth = n, this.viewportWidth = a; const r = []; const l = this.option('slidesPerPage'); if (Number.isInteger(l) && n > a) for (let c = 0; c < this.slides.length; c += l)r.push({indexes: o.slice(c, c + l), slides: this.slides.slice(c, c + l)}); else for (let h = 0, d = 0, u = 0; u < this.slides.length; u += 1) { const f = this.slides[u]; (!r.length || d + f.width > a) && (r.push({indexes: [], slides: []}), h = r.length - 1, d = 0), d += f.width, r[h].indexes.push(u), r[h].slides.push(f); } const v = this.option('center'); const p = this.option('fill'); r.forEach((t, i) => { t.index = i, t.width = t.slides.reduce((t, e) => { return t + e.width; }, 0), t.left = t.slides[0].left, v && (t.left += .5 * (a - t.width) * -1), p && !e.option('infiniteX', e.option('infinite')) && n > a && (t.left = Math.max(t.left, 0), t.left = Math.min(t.left, n - a)); }); let g; const y = []; r.forEach(t => { const e = i({}, t); g && e.left === g.left ? (g.width += e.width, g.slides = [].concat(m(g.slides), m(e.slides)), g.indexes = [].concat(m(g.indexes), m(e.indexes))) : (e.index = y.length, g = e, y.push(e)); }), this.pages = y; let b = this.page; if (b === null) { const x = this.option('initialSlide'); b = x !== null ? this.findPageForSlide(x) : parseInt(this.option('initialPage', 0), 10) || 0, y[b] || (b = y.length && b > y.length ? y[y.length - 1].index : 0), this.page = b, this.pageIndex = b; } this.updatePanzoom(), this.trigger('refresh'); }}, {key: 'getSlideMetrics', value: function(t) { if (!t) { let e, i; const n = this.slides[0]; if ((t = document.createElement('div')).dataset.isTestEl = 1, t.style.visibility = 'hidden', (e = t.classList).add.apply(e, m((this.option('prefix') + this.option('classNames.slide')).split(' '))), n.customClass)(i = t.classList).add.apply(i, m(n.customClass.split(' '))); this.$track.prepend(t); } let o = Math.max(t.offsetWidth, S(t.getBoundingClientRect().width)); const a = t.currentStyle || window.getComputedStyle(t); return o = o + (parseFloat(a.marginLeft) || 0) + (parseFloat(a.marginRight) || 0), t.dataset.isTestEl && t.remove(), o; }}, {key: 'findPageForSlide', value: function(t) { t = parseInt(t, 10) || 0; const e = this.pages.find(e => { return e.indexes.indexOf(t) > -1; }); return e ? e.index : null; }}, {key: 'slideNext', value: function() { this.slideTo(this.pageIndex + 1); }}, {key: 'slidePrev', value: function() { this.slideTo(this.pageIndex - 1); }}, {key: 'slideTo', value: function(t) { const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; const i = e.x; const n = void 0 === i ? -1 * this.setPage(t, !0) : i; const o = e.y; const a = void 0 === o ? 0 : o; const s = e.friction; const r = void 0 === s ? this.option('friction') : s; this.Panzoom.content.x === n && !this.Panzoom.velocity.x && r || (this.Panzoom.panTo({x: n, y: a, friction: r, ignoreBounds: !0}), this.state === 'ready' && this.Panzoom.state === 'ready' && this.trigger('settle')); }}, {key: 'initPanzoom', value: function() { const t = this; this.Panzoom && this.Panzoom.destroy(); const e = k(!0, {}, {content: this.$track, wrapInner: !1, resizeParent: !1, zoom: !1, click: !1, lockAxis: 'x', x: this.pages.length ? -1 * this.pages[this.page].left : 0, centerOnStart: !1, textSelection: function() { return t.option('textSelection', !1); }, panOnlyZoomed: function() { return this.content.width <= this.viewport.width; }}, this.option('Panzoom')); this.Panzoom = new M(this.$container, e), this.Panzoom.on({'*': function(e) { for (var i = arguments.length, n = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++)n[o - 1] = arguments[o]; return t.trigger.apply(t, ['Panzoom.'.concat(e)].concat(n)); }, afterUpdate: function() { t.updatePage(); }, beforeTransform: this.onBeforeTransform.bind(this), touchEnd: this.onTouchEnd.bind(this), endAnimation: function() { t.trigger('settle'); }}), this.updateMetrics(), this.manageSlideVisiblity(); }}, {key: 'updatePanzoom', value: function() { this.Panzoom && (this.Panzoom.content = i(i({}, this.Panzoom.content), {}, {fitWidth: this.contentWidth, origWidth: this.contentWidth, width: this.contentWidth}), this.pages.length > 1 && this.option('infiniteX', this.option('infinite')) ? this.Panzoom.boundX = null : this.pages.length && (this.Panzoom.boundX = {from: -1 * this.pages[this.pages.length - 1].left, to: -1 * this.pages[0].left}), this.option('infiniteY', this.option('infinite')) ? this.Panzoom.boundY = null : this.Panzoom.boundY = {from: 0, to: 0}, this.Panzoom.handleCursor()); }}, {key: 'manageSlideVisiblity', value: function() { const t = this; const e = this.contentWidth; const i = this.viewportWidth; const n = this.Panzoom ? -1 * this.Panzoom.content.x : this.pages.length ? this.pages[this.page].left : 0; const o = this.option('preload'); const a = this.option('infiniteX', this.option('infinite')); const s = parseFloat(getComputedStyle(this.$viewport, null).getPropertyValue('padding-left')); const r = parseFloat(getComputedStyle(this.$viewport, null).getPropertyValue('padding-right')); this.slides.forEach(l => { let c, h; let d = 0; c = n - s, h = n + i + r, c -= o * (i + s + r), h += o * (i + s + r); const u = l.left + l.width > c && l.left < h; c = n + e - s, h = n + e + i + r, c -= o * (i + s + r); const f = a && l.left + l.width > c && l.left < h; c = n - e - s, h = n - e + i + r, c -= o * (i + s + r); const v = a && l.left + l.width > c && l.left < h; f || u || v ? (t.createSlideEl(l), u && (d = 0), f && (d = -1), v && (d = 1), l.left + l.width > n && l.left <= n + i + r && (d = 0)) : t.removeSlideEl(l), l.hasDiff = d; }); let l = 0; let c = 0; this.slides.forEach((t, i) => { let n = 0; t.$el ? (i !== l || t.hasDiff ? n = c + t.hasDiff * e : c = 0, t.$el.style.left = Math.abs(n) > .1 ? ''.concat(c + t.hasDiff * e, 'px') : '', l++) : c += t.width; }), this.markSelectedSlides(); }}, {key: 'createSlideEl', value: function(t) { let e; if (t) { if (!t.$el) { let i; const n = document.createElement('div'); if (n.dataset.index = t.index, (e = n.classList).add.apply(e, m((this.option('prefix') + this.option('classNames.slide')).split(' '))), t.customClass)(i = n.classList).add.apply(i, m(t.customClass.split(' '))); t.html && (n.innerHTML = t.html); const o = []; this.slides.forEach((t, e) => { t.$el && o.push(e); }); const a = t.index; let s = null; if (o.length) { const r = o.reduce((t, e) => { return Math.abs(e - a) < Math.abs(t - a) ? e : t; }); s = this.slides[r]; } return this.$track.insertBefore(n, s && s.$el ? s.index < t.index ? s.$el.nextSibling : s.$el : null), t.$el = n, this.trigger('createSlide', t, a), t; } let l; const c = t.$el.dataset.index; c && parseInt(c, 10) === t.index || (t.$el.dataset.index = t.index, t.$el.querySelectorAll('[data-lazy-srcset]').forEach(t => { t.srcset = t.dataset.lazySrcset; }), t.$el.querySelectorAll('[data-lazy-src]').forEach(t => { const e = t.dataset.lazySrc; t instanceof HTMLImageElement ? t.src = e : t.style.backgroundImage = 'url(\''.concat(e, '\')'); }), (l = t.$el.dataset.lazySrc) && (t.$el.style.backgroundImage = 'url(\''.concat(l, '\')')), t.state = 'ready'); } }}, {key: 'removeSlideEl', value: function(t) { t.$el && !t.isDom && (this.trigger('removeSlide', t), t.$el.remove(), t.$el = null); }}, {key: 'markSelectedSlides', value: function() { const t = this; const e = this.option('classNames.slideSelected'); const i = 'aria-hidden'; this.slides.forEach((n, o) => { const a = n.$el; if (a) { const s = t.pages[t.page]; s && s.indexes && s.indexes.indexOf(o) > -1 ? (e && !a.classList.contains(e) && (a.classList.add(e), t.trigger('selectSlide', n)), a.removeAttribute(i)) : (e && a.classList.contains(e) && (a.classList.remove(e), t.trigger('unselectSlide', n)), a.setAttribute(i, !0)); } }); }}, {key: 'updatePage', value: function() { this.updateMetrics(), this.slideTo(this.page, {friction: 0}); }}, {key: 'onBeforeTransform', value: function() { this.option('infiniteX', this.option('infinite')) && this.manageInfiniteTrack(), this.manageSlideVisiblity(); }}, {key: 'manageInfiniteTrack', value: function() { const t = this.contentWidth; const e = this.viewportWidth; if (!(!this.option('infiniteX', this.option('infinite')) || this.pages.length < 2 || t < e)) { const i = this.Panzoom; let n = !1; return i.content.x < -1 * (t - e) && (i.content.x += t, this.pageIndex = this.pageIndex - this.pages.length, n = !0), i.content.x > e && (i.content.x -= t, this.pageIndex = this.pageIndex + this.pages.length, n = !0), n && i.state === 'pointerdown' && i.resetDragPosition(), n; } }}, {key: 'onTouchEnd', value: function(t, e) { const i = this.option('dragFree'); if (!i && this.pages.length > 1 && t.dragOffset.time < 350 && Math.abs(t.dragOffset.y) < 1 && Math.abs(t.dragOffset.x) > 5) this[t.dragOffset.x < 0 ? 'slideNext' : 'slidePrev'](); else if (i) { const n = g(this.getPageFromPosition(-1 * t.transform.x), 2)[1]; this.setPage(n); } else this.slideToClosest(); }}, {key: 'slideToClosest', value: function() { const t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; const e = this.getPageFromPosition(-1 * this.Panzoom.content.x); const i = g(e, 2); const n = i[1]; this.slideTo(n, t); }}, {key: 'getPageFromPosition', value: function(t) { const e = this.pages.length; this.option('center') && (t += .5 * this.viewportWidth); const i = Math.floor(t / this.contentWidth); t -= i * this.contentWidth; const n = this.slides.find(e => { return e.left <= t && e.left + e.width > t; }); if (n) { const o = this.findPageForSlide(n.index); return [o, o + i * e]; } return [0, 0]; }}, {key: 'setPage', value: function(t, e) { let i = 0; let n = parseInt(t, 10) || 0; const o = this.page; const a = this.pageIndex; const s = this.pages.length; const r = this.contentWidth; const l = this.viewportWidth; if (t = (n % s + s) % s, this.option('infiniteX', this.option('infinite')) && r > l) { const c = Math.floor(n / s) || 0; const h = r; if (i = this.pages[t].left + c * h, !0 === e && s > 2) { const d = -1 * this.Panzoom.content.x; const u = i - h; const f = i + h; const v = Math.abs(d - i); const p = Math.abs(d - u); const g = Math.abs(d - f); g < v && g <= p ? (i = f, n += s) : p < v && p < g && (i = u, n -= s); } } else t = n = Math.max(0, Math.min(n, s - 1)), i = this.pages.length ? this.pages[t].left : 0; return this.page = t, this.pageIndex = n, o !== null && t !== o && (this.prevPage = o, this.prevPageIndex = a, this.trigger('change', t, o)), i; }}, {key: 'destroy', value: function() { const t = this; this.state = 'destroy', this.slides.forEach(e => { t.removeSlideEl(e); }), this.slides = [], this.Panzoom.destroy(), this.detachPlugins(); }}]), n; }(O)); W.version = '4.0.26', W.Plugins = D; const H = !(typeof window === 'undefined' || !window.document || !window.document.createElement); let j = null; const X = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', 'video', 'audio', '[contenteditable]', '[tabindex]:not([tabindex^="-"]):not([disabled]):not([aria-hidden])']; const q = function(t) { if (t && H) { j === null && document.createElement('div').focus({get preventScroll() { return j = !0, !1; }}); try { if (t.setActive)t.setActive(); else if (j)t.focus({preventScroll: !0}); else { const e = window.pageXOffset || document.body.scrollTop; const i = window.pageYOffset || document.body.scrollLeft; t.focus(), document.body.scrollTo({top: e, left: i, behavior: 'auto'}); } } catch (t) {} } }; const U = (function() { function t(e) { o(this, t), this.fancybox = e, this.viewport = null, this.pendingUpdate = null; for (let i = 0, n = ['onReady', 'onResize', 'onTouchstart', 'onTouchmove']; i < n.length; i++) { const a = n[i]; this[a] = this[a].bind(this); } } return s(t, [{key: 'onReady', value: function() { const t = window.visualViewport; t && (this.viewport = t, this.startY = 0, t.addEventListener('resize', this.onResize), this.updateViewport()), window.addEventListener('touchstart', this.onTouchstart, {passive: !1}), window.addEventListener('touchmove', this.onTouchmove, {passive: !1}), window.addEventListener('wheel', this.onWheel, {passive: !1}); }}, {key: 'onResize', value: function() { this.updateViewport(); }}, {key: 'updateViewport', value: function() { const t = this.fancybox; const e = this.viewport; const i = e.scale || 1; const n = t.$container; if (n) { let o = ''; let a = ''; let s = ''; i - 1 > .1 && (o = ''.concat(e.width * i, 'px'), a = ''.concat(e.height * i, 'px'), s = 'translate3d('.concat(e.offsetLeft, 'px, ').concat(e.offsetTop, 'px, 0) scale(').concat(1 / i, ')')), n.style.width = o, n.style.height = a, n.style.transform = s; } }}, {key: 'onTouchstart', value: function(t) { this.startY = t.touches ? t.touches[0].screenY : t.screenY; }}, {key: 'onTouchmove', value: function(t) { const e = this.startY; const i = window.innerWidth / window.document.documentElement.clientWidth; if (t.cancelable && !(t.touches.length > 1 || i !== 1)) { const n = C(t.composedPath()[0]); if (n) { const o = window.getComputedStyle(n); const a = parseInt(o.getPropertyValue('height'), 10); const s = t.touches ? t.touches[0].screenY : t.screenY; const r = e <= s && n.scrollTop === 0; const l = e >= s && n.scrollHeight - n.scrollTop === a; (r || l) && t.preventDefault(); } else t.preventDefault(); } }}, {key: 'onWheel', value: function(t) { C(t.composedPath()[0]) || t.preventDefault(); }}, {key: 'cleanup', value: function() { this.pendingUpdate && (cancelAnimationFrame(this.pendingUpdate), this.pendingUpdate = null); const t = this.viewport; t && (t.removeEventListener('resize', this.onResize), this.viewport = null), window.removeEventListener('touchstart', this.onTouchstart, !1), window.removeEventListener('touchmove', this.onTouchmove, !1), window.removeEventListener('wheel', this.onWheel, {passive: !1}); }}, {key: 'attach', value: function() { this.fancybox.on('initLayout', this.onReady); }}, {key: 'detach', value: function() { this.fancybox.off('initLayout', this.onReady), this.cleanup(); }}]), t; }()); const Y = (function() { function t(e) { o(this, t), this.fancybox = e, this.$container = null, this.state = 'init'; for (let i = 0, n = ['onPrepare', 'onClosing', 'onKeydown']; i < n.length; i++) { const a = n[i]; this[a] = this[a].bind(this); } this.events = {prepare: this.onPrepare, closing: this.onClosing, keydown: this.onKeydown}; } return s(t, [{key: 'onPrepare', value: function() { this.getSlides().length < this.fancybox.option('Thumbs.minSlideCount') ? this.state = 'disabled' : !0 === this.fancybox.option('Thumbs.autoStart') && this.fancybox.Carousel.Panzoom.content.height >= this.fancybox.option('Thumbs.minScreenHeight') && this.build(); }}, {key: 'onClosing', value: function() { this.Carousel && this.Carousel.Panzoom.detachEvents(); }}, {key: 'onKeydown', value: function(t, e) { e === t.option('Thumbs.key') && this.toggle(); }}, {key: 'build', value: function() { const t = this; if (!this.$container) { const e = document.createElement('div'); e.classList.add('fancybox__thumbs'), this.fancybox.$carousel.parentNode.insertBefore(e, this.fancybox.$carousel.nextSibling), this.Carousel = new W(e, k(!0, {Dots: !1, Navigation: !1, Sync: {friction: 0}, infinite: !1, center: !0, fill: !0, dragFree: !0, slidesPerPage: 1, preload: 1}, this.fancybox.option('Thumbs.Carousel'), {Sync: {target: this.fancybox.Carousel}, slides: this.getSlides()})), this.Carousel.Panzoom.on('wheel', (e, i) => { i.preventDefault(), t.fancybox[i.deltaY < 0 ? 'prev' : 'next'](); }), this.$container = e, this.state = 'visible'; } }}, {key: 'getSlides', value: function() { let t; const e = []; const i = x(this.fancybox.items); try { for (i.s(); !(t = i.n()).done;) { const n = t.value; const o = n.thumb; o && e.push({html: '<div class="fancybox__thumb" style="background-image:url(\''.concat(o, '\')"></div>'), customClass: 'has-thumb has-'.concat(n.type || 'image')}); } } catch (t) { i.e(t); } finally { i.f(); } return e; }}, {key: 'toggle', value: function() { this.state === 'visible' ? this.hide() : this.state === 'hidden' ? this.show() : this.build(); }}, {key: 'show', value: function() { this.state === 'hidden' && (this.$container.style.display = '', this.Carousel.Panzoom.attachEvents(), this.state = 'visible'); }}, {key: 'hide', value: function() { this.state === 'visible' && (this.Carousel.Panzoom.detachEvents(), this.$container.style.display = 'none', this.state = 'hidden'); }}, {key: 'cleanup', value: function() { this.Carousel && (this.Carousel.destroy(), this.Carousel = null), this.$container && (this.$container.remove(), this.$container = null), this.state = 'init'; }}, {key: 'attach', value: function() { this.fancybox.on(this.events); }}, {key: 'detach', value: function() { this.fancybox.off(this.events), this.cleanup(); }}]), t; }()); Y.defaults = {minSlideCount: 2, minScreenHeight: 500, autoStart: !0, key: 't', Carousel: {}}; const V = function(t, e) { for (var i = new URL(t), n = new URLSearchParams(i.search), o = new URLSearchParams(), a = 0, s = [].concat(m(n), m(Object.entries(e))); a < s.length; a++) { const r = g(s[a], 2); const l = r[0]; const c = r[1]; l === 't' ? o.set('start', parseInt(c)) : o.set(l, c); }o = o.toString(); const h = t.match(/#t=((.*)?\d+s)/); return h && (o += '#t='.concat(h[1])), o; }; const Z = {video: {autoplay: !0, ratio: 16 / 9}, youtube: {autohide: 1, fs: 1, rel: 0, hd: 1, wmode: 'transparent', enablejsapi: 1, html5: 1}, vimeo: {hd: 1, show_title: 1, show_byline: 1, show_portrait: 0, fullscreen: 1}, html5video: {tpl: '<video class="fancybox__html5video" playsinline controls controlsList="nodownload" poster="{{poster}}">\n  <source src="{{src}}" type="{{format}}" />Sorry, your browser doesn\'t support embedded videos.</video>', format: ''}}; const G = (function() { function t(e) { o(this, t), this.fancybox = e; for (let i = 0, n = ['onInit', 'onReady', 'onCreateSlide', 'onRemoveSlide', 'onSelectSlide', 'onUnselectSlide', 'onRefresh', 'onMessage']; i < n.length; i++) { const a = n[i]; this[a] = this[a].bind(this); } this.events = {init: this.onInit, ready: this.onReady, 'Carousel.createSlide': this.onCreateSlide, 'Carousel.removeSlide': this.onRemoveSlide, 'Carousel.selectSlide': this.onSelectSlide, 'Carousel.unselectSlide': this.onUnselectSlide, 'Carousel.refresh': this.onRefresh}; } return s(t, [{key: 'onInit', value: function() { let t; const e = x(this.fancybox.items); try { for (e.s(); !(t = e.n()).done;) { const i = t.value; this.processType(i); } } catch (t) { e.e(t); } finally { e.f(); } }}, {key: 'processType', value: function(t) { if (t.html) return t.src = t.html, t.type = 'html', void delete t.html; const e = t.src || ''; let i = t.type || this.fancybox.options.type; let n = null; if (!e || typeof e === 'string') { if (n = e.match(/(?:youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(?:watch\?(?:.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(?:.*)|[\w-]{11}|\?listType=(?:.*)&list=(?:.*))(?:.*)/i)) { const o = V(e, this.fancybox.option('Html.youtube')); const a = encodeURIComponent(n[1]); t.videoId = a, t.src = 'https://www.youtube-nocookie.com/embed/'.concat(a, '?').concat(o), t.thumb = t.thumb || 'https://i.ytimg.com/vi/'.concat(a, '/mqdefault.jpg'), t.vendor = 'youtube', i = 'video'; } else if (n = e.match(/^.+vimeo.com\/(?:\/)?([\d]+)(.*)?/)) { const s = V(e, this.fancybox.option('Html.vimeo')); const r = encodeURIComponent(n[1]); t.videoId = r, t.src = 'https://player.vimeo.com/video/'.concat(r, '?').concat(s), t.vendor = 'vimeo', i = 'video'; } else (n = e.match(/(?:maps\.)?google\.([a-z]{2,3}(?:\.[a-z]{2})?)\/(?:(?:(?:maps\/(?:place\/(?:.*)\/)?\@(.*),(\d+.?\d+?)z))|(?:\?ll=))(.*)?/i)) ? (t.src = '//maps.google.'.concat(n[1], '/?ll=').concat((n[2] ? n[2] + '&z=' + Math.floor(n[3]) + (n[4] ? n[4].replace(/^\//, '&') : '') : n[4] + '').replace(/\?/, '&'), '&output=').concat(n[4] && n[4].indexOf('layer=c') > 0 ? 'svembed' : 'embed'), i = 'map') : (n = e.match(/(?:maps\.)?google\.([a-z]{2,3}(?:\.[a-z]{2})?)\/(?:maps\/search\/)(.*)/i)) && (t.src = '//maps.google.'.concat(n[1], '/maps?q=').concat(n[2].replace('query=', 'q=').replace('api=1', ''), '&output=embed'), i = 'map'); i || (e.charAt(0) === '#' ? i = 'inline' : (n = e.match(/\.(mp4|mov|ogv|webm)((\?|#).*)?$/i)) ? (i = 'html5video', t.format = t.format || 'video/' + (n[1] === 'ogv' ? 'ogg' : n[1])) : e.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i) ? i = 'image' : e.match(/\.(pdf)((\?|#).*)?$/i) && (i = 'pdf')), t.type = i || this.fancybox.option('defaultType', 'image'), i !== 'html5video' && i !== 'video' || (t.video = k({}, this.fancybox.option('Html.video'), t.video), t._width && t._height ? t.ratio = parseFloat(t._width) / parseFloat(t._height) : t.ratio = t.ratio || t.video.ratio || Z.video.ratio); } }}, {key: 'onReady', value: function() { const t = this; this.fancybox.Carousel.slides.forEach(e => { e.$el && (t.setContent(e), e.index === t.fancybox.getSlide().index && t.playVideo(e)); }); }}, {key: 'onCreateSlide', value: function(t, e, i) { this.fancybox.state === 'ready' && this.setContent(i); }}, {key: 'loadInlineContent', value: function(t) { let e; if (t.src instanceof HTMLElement)e = t.src; else if (typeof t.src === 'string') { const i = t.src.split('#', 2); const n = i.length === 2 && i[0] === '' ? i[1] : i[0]; e = document.getElementById(n); } if (e) { if (t.type === 'clone' || e.$placeHolder) { let o = (e = e.cloneNode(!0)).getAttribute('id'); o = o ? ''.concat(o, '--clone') : 'clone-'.concat(this.fancybox.id, '-').concat(t.index), e.setAttribute('id', o); } else { const a = document.createElement('div'); a.classList.add('fancybox-placeholder'), e.parentNode.insertBefore(a, e), e.$placeHolder = a; } this.fancybox.setContent(t, e); } else this.fancybox.setError(t, '{{ELEMENT_NOT_FOUND}}'); }}, {key: 'loadAjaxContent', value: function(t) { const e = this.fancybox; const i = new XMLHttpRequest(); e.showLoading(t), i.onreadystatechange = function() { i.readyState === XMLHttpRequest.DONE && e.state === 'ready' && (e.hideLoading(t), i.status === 200 ? e.setContent(t, i.responseText) : e.setError(t, i.status === 404 ? '{{AJAX_NOT_FOUND}}' : '{{AJAX_FORBIDDEN}}')); }, i.open('GET', t.src), i.setRequestHeader('X-Requested-With', 'XMLHttpRequest'), i.send(t.ajax || null), t.xhr = i; }}, {key: 'loadIframeContent', value: function(t) { const e = this; const i = this.fancybox; const n = document.createElement('iframe'); if (n.className = 'fancybox__iframe', n.setAttribute('id', 'fancybox__iframe_'.concat(i.id, '_').concat(t.index)), n.setAttribute('allow', 'autoplay; fullscreen'), n.setAttribute('scrolling', 'auto'), t.$iframe = n, t.type !== 'iframe' || !1 === t.preload) return n.setAttribute('src', t.src), this.fancybox.setContent(t, n), void this.resizeIframe(t); i.showLoading(t); const o = document.createElement('div'); o.style.visibility = 'hidden', this.fancybox.setContent(t, o), o.appendChild(n), n.onerror = function() { i.setError(t, '{{IFRAME_ERROR}}'); }, n.onload = function() { i.hideLoading(t); let o = !1; n.isReady || (n.isReady = !0, o = !0), n.src.length && (n.parentNode.style.visibility = '', e.resizeIframe(t), o && i.revealContent(t)); }, n.setAttribute('src', t.src); }}, {key: 'setAspectRatio', value: function(t) { const e = t.$content; const i = t.ratio; if (e) { let n = t._width; let o = t._height; if (i || n && o) { Object.assign(e.style, {width: n && o ? '100%' : '', height: n && o ? '100%' : '', maxWidth: '', maxHeight: ''}); const a = e.offsetWidth; const s = e.offsetHeight; if (o = o || s, (n = n || a) > a || o > s) { const r = Math.min(a / n, s / o); n *= r, o *= r; }Math.abs(n / o - i) > .01 && (i < n / o ? n = o * i : o = n / i), Object.assign(e.style, {width: ''.concat(n, 'px'), height: ''.concat(o, 'px')}); } } }}, {key: 'resizeIframe', value: function(t) { const e = t.$iframe; if (e) { let i = t._width || 0; let n = t._height || 0; i && n && (t.autoSize = !1); const o = e.parentNode; const a = o && o.style; if (!1 !== t.preload && !1 !== t.autoSize && a) try { const s = window.getComputedStyle(o); const r = parseFloat(s.paddingLeft) + parseFloat(s.paddingRight); const l = parseFloat(s.paddingTop) + parseFloat(s.paddingBottom); const c = e.contentWindow.document; const h = c.getElementsByTagName('html')[0]; const d = c.body; a.width = '', d.style.overflow = 'hidden', i = i || h.scrollWidth + r, a.width = ''.concat(i, 'px'), d.style.overflow = '', a.flex = '0 0 auto', a.height = ''.concat(d.scrollHeight, 'px'), n = h.scrollHeight + l; } catch (t) {} if (i || n) { const u = {flex: '0 1 auto'}; i && (u.width = ''.concat(i, 'px')), n && (u.height = ''.concat(n, 'px')), Object.assign(a, u); } } }}, {key: 'onRefresh', value: function(t, e) { const i = this; e.slides.forEach(t => { t.$el && (t.$iframe && i.resizeIframe(t), t.ratio && i.setAspectRatio(t)); }); }}, {key: 'setContent', value: function(t) { if (t && !t.isDom) { switch (t.type) { case 'html':this.fancybox.setContent(t, t.src); break; case 'html5video':this.fancybox.setContent(t, this.fancybox.option('Html.html5video.tpl').replace(/\{\{src\}\}/gi, t.src).replace('{{format}}', t.format || t.html5video && t.html5video.format || '').replace('{{poster}}', t.poster || t.thumb || '')); break; case 'inline':case 'clone':this.loadInlineContent(t); break; case 'ajax':this.loadAjaxContent(t); break; case 'pdf':case 'video':case 'map':t.preload = !1; case 'iframe':this.loadIframeContent(t); }t.ratio && this.setAspectRatio(t); } }}, {key: 'onSelectSlide', value: function(t, e, i) { t.state === 'ready' && this.playVideo(i); }}, {key: 'playVideo', value: function(t) { if (t.type === 'html5video' && t.video.autoplay) try { const e = t.$el.querySelector('video'); if (e) { const i = e.play(); void 0 !== i && i.then(() => {}).catch(t => { e.muted = !0, e.play(); }); } } catch (t) {} if (t.type === 'video' && t.$iframe && t.$iframe.contentWindow) { !(function e() { if (t.state === 'done' && t.$iframe && t.$iframe.contentWindow) { let i; if (t.$iframe.isReady) return t.video && t.video.autoplay && (i = t.vendor == 'youtube' ? {event: 'command', func: 'playVideo'} : {method: 'play', value: 'true'}), void(i && t.$iframe.contentWindow.postMessage(JSON.stringify(i), '*')); t.vendor === 'youtube' && (i = {event: 'listening', id: t.$iframe.getAttribute('id')}, t.$iframe.contentWindow.postMessage(JSON.stringify(i), '*')); }t.poller = setTimeout(e, 250); }()); } }}, {key: 'onUnselectSlide', value: function(t, e, i) { if (i.type !== 'html5video') { let n = !1; i.vendor == 'vimeo' ? n = {method: 'pause', value: 'true'} : i.vendor === 'youtube' && (n = {event: 'command', func: 'pauseVideo'}), n && i.$iframe && i.$iframe.contentWindow && i.$iframe.contentWindow.postMessage(JSON.stringify(n), '*'), clearTimeout(i.poller); } else try { i.$el.querySelector('video').pause(); } catch (t) {} }}, {key: 'onRemoveSlide', value: function(t, e, i) { i.xhr && (i.xhr.abort(), i.xhr = null), i.$iframe && (i.$iframe.onload = i.$iframe.onerror = null, i.$iframe.src = '//about:blank', i.$iframe = null); const n = i.$content; i.type === 'inline' && n && (n.classList.remove('fancybox__content'), n.style.display !== 'none' && (n.style.display = 'none')), i.$closeButton && (i.$closeButton.remove(), i.$closeButton = null); const o = n && n.$placeHolder; o && (o.parentNode.insertBefore(n, o), o.remove(), n.$placeHolder = null); }}, {key: 'onMessage', value: function(t) { try { const e = JSON.parse(t.data); if (t.origin === 'https://player.vimeo.com') { if (e.event === 'ready') { let i; const n = x(document.getElementsByClassName('fancybox__iframe')); try { for (n.s(); !(i = n.n()).done;) { const o = i.value; o.contentWindow === t.source && (o.isReady = 1); } } catch (t) { n.e(t); } finally { n.f(); } } } else t.origin === 'https://www.youtube-nocookie.com' && e.event === 'onReady' && (document.getElementById(e.id).isReady = 1); } catch (t) {} }}, {key: 'attach', value: function() { this.fancybox.on(this.events), window.addEventListener('message', this.onMessage, !1); }}, {key: 'detach', value: function() { this.fancybox.off(this.events), window.removeEventListener('message', this.onMessage, !1); }}]), t; }()); G.defaults = Z; const K = (function() { function t(e) { o(this, t), this.fancybox = e; for (let i = 0, n = ['onReady', 'onClosing', 'onDone', 'onPageChange', 'onCreateSlide', 'onRemoveSlide', 'onImageStatusChange']; i < n.length; i++) { const a = n[i]; this[a] = this[a].bind(this); } this.events = {ready: this.onReady, closing: this.onClosing, done: this.onDone, 'Carousel.change': this.onPageChange, 'Carousel.createSlide': this.onCreateSlide, 'Carousel.removeSlide': this.onRemoveSlide}; } return s(t, [{key: 'onReady', value: function() { const t = this; this.fancybox.Carousel.slides.forEach(e => { e.$el && t.setContent(e); }); }}, {key: 'onDone', value: function(t, e) { this.handleCursor(e); }}, {key: 'onClosing', value: function(t) { clearTimeout(this.clickTimer), this.clickTimer = null, t.Carousel.slides.forEach(t => { t.$image && (t.state = 'destroy'), t.Panzoom && t.Panzoom.detachEvents(); }), this.fancybox.state === 'closing' && this.canZoom(t.getSlide()) && this.zoomOut(); }}, {key: 'onCreateSlide', value: function(t, e, i) { this.fancybox.state === 'ready' && this.setContent(i); }}, {key: 'onRemoveSlide', value: function(t, e, i) { i.$image && (i.$el.classList.remove(t.option('Image.canZoomInClass')), i.$image.remove(), i.$image = null), i.Panzoom && (i.Panzoom.destroy(), i.Panzoom = null), i.$el && i.$el.dataset && delete i.$el.dataset.imageFit; }}, {key: 'setContent', value: function(t) { const e = this; if (!(t.isDom || t.html || t.type && t.type !== 'image' || t.$image)) { t.type = 'image', t.state = 'loading'; const i = document.createElement('div'); i.style.visibility = 'hidden'; const n = document.createElement('img'); n.addEventListener('load', i => { i.stopImmediatePropagation(), e.onImageStatusChange(t); }), n.addEventListener('error', () => { e.onImageStatusChange(t); }), n.src = t.src, n.alt = '', n.draggable = !1, n.classList.add('fancybox__image'), t.srcset && n.setAttribute('srcset', t.srcset), t.sizes && n.setAttribute('sizes', t.sizes), t.$image = n; const o = this.fancybox.option('Image.wrap'); if (o) { const a = document.createElement('div'); a.classList.add(typeof o === 'string' ? o : 'fancybox__image-wrap'), a.appendChild(n), i.appendChild(a), t.$wrap = a; } else i.appendChild(n); t.$el.dataset.imageFit = this.fancybox.option('Image.fit'), this.fancybox.setContent(t, i), n.complete || n.error ? this.onImageStatusChange(t) : this.fancybox.showLoading(t); } }}, {key: 'onImageStatusChange', value: function(t) { const e = this; const i = t.$image; i && t.state === 'loading' && (i.complete && i.naturalWidth && i.naturalHeight ? (this.fancybox.hideLoading(t), this.fancybox.option('Image.fit') === 'contain' && this.initSlidePanzoom(t), t.$el.addEventListener('wheel', i => { return e.onWheel(t, i); }, {passive: !1}), t.$content.addEventListener('click', i => { return e.onClick(t, i); }, {passive: !1}), this.revealContent(t)) : this.fancybox.setError(t, '{{IMAGE_ERROR}}')); }}, {key: 'initSlidePanzoom', value: function(t) { const e = this; t.Panzoom || (t.Panzoom = new M(t.$el, k(!0, this.fancybox.option('Image.Panzoom', {}), {viewport: t.$wrap, content: t.$image, width: t._width, height: t._height, wrapInner: !1, textSelection: !0, touch: this.fancybox.option('Image.touch'), panOnlyZoomed: !0, click: !1, wheel: !1})), t.Panzoom.on('startAnimation', () => { e.fancybox.trigger('Image.startAnimation', t); }), t.Panzoom.on('endAnimation', () => { t.state === 'zoomIn' && e.fancybox.done(t), e.handleCursor(t), e.fancybox.trigger('Image.endAnimation', t); }), t.Panzoom.on('afterUpdate', () => { e.handleCursor(t), e.fancybox.trigger('Image.afterUpdate', t); })); }}, {key: 'revealContent', value: function(t) { this.fancybox.Carousel.prevPage === null && t.index === this.fancybox.options.startIndex && this.canZoom(t) ? this.zoomIn() : this.fancybox.revealContent(t); }}, {key: 'getZoomInfo', value: function(t) { const e = t.$thumb.getBoundingClientRect(); const i = e.width; const n = e.height; const o = t.$content.getBoundingClientRect(); const a = o.width; const s = o.height; const r = o.top - e.top; const l = o.left - e.left; let c = this.fancybox.option('Image.zoomOpacity'); return c === 'auto' && (c = Math.abs(i / n - a / s) > .1), {top: r, left: l, scale: a && i ? i / a : 1, opacity: c}; }}, {key: 'canZoom', value: function(t) { const e = this.fancybox; const i = e.$container; if (window.visualViewport && window.visualViewport.scale !== 1) return !1; if (t.Panzoom && !t.Panzoom.content.width) return !1; if (!e.option('Image.zoom') || e.option('Image.fit') !== 'contain') return !1; const n = t.$thumb; if (!n || t.state === 'loading') return !1; i.classList.add('fancybox__no-click'); let o; const a = n.getBoundingClientRect(); if (this.fancybox.option('Image.ignoreCoveredThumbnail')) { const s = document.elementFromPoint(a.left + 1, a.top + 1) === n; const r = document.elementFromPoint(a.right - 1, a.bottom - 1) === n; o = s && r; } else o = document.elementFromPoint(a.left + .5 * a.width, a.top + .5 * a.height) === n; return i.classList.remove('fancybox__no-click'), o; }}, {key: 'zoomIn', value: function() { const t = this.fancybox; const e = t.getSlide(); const i = e.Panzoom; const n = this.getZoomInfo(e); const o = n.top; const a = n.left; const s = n.scale; const r = n.opacity; t.trigger('reveal', e), i.panTo({x: -1 * a, y: -1 * o, scale: s, friction: 0, ignoreBounds: !0}), e.$content.style.visibility = '', e.state = 'zoomIn', !0 === r && i.on('afterTransform', t => { e.state !== 'zoomIn' && e.state !== 'zoomOut' || (t.$content.style.opacity = Math.min(1, 1 - (1 - t.content.scale) / (1 - s))); }), i.panTo({x: 0, y: 0, scale: 1, friction: this.fancybox.option('Image.zoomFriction')}); }}, {key: 'zoomOut', value: function() { const t = this; const e = this.fancybox; const i = e.getSlide(); const n = i.Panzoom; if (n) { i.state = 'zoomOut', e.state = 'customClosing', i.$caption && (i.$caption.style.visibility = 'hidden'); let o = this.fancybox.option('Image.zoomFriction'); const a = function(e) { const a = t.getZoomInfo(i); const s = a.top; const r = a.left; const l = a.scale; const c = a.opacity; e || c || (o *= .82), n.panTo({x: -1 * r, y: -1 * s, scale: l, friction: o, ignoreBounds: !0}), o *= .98; }; window.addEventListener('scroll', a), n.once('endAnimation', () => { window.removeEventListener('scroll', a), e.destroy(); }), a(); } }}, {key: 'handleCursor', value: function(t) { if (t.type === 'image' && t.$el) { const e = t.Panzoom; const i = this.fancybox.option('Image.click', !1, t); const n = this.fancybox.option('Image.touch'); const o = t.$el.classList; const a = this.fancybox.option('Image.canZoomInClass'); const s = this.fancybox.option('Image.canZoomOutClass'); if (o.remove(s), o.remove(a), e && i === 'toggleZoom')e && e.content.scale === 1 && e.option('maxScale') - e.content.scale > .01 ? o.add(a) : e.content.scale > 1 && !n && o.add(s); else i === 'close' && o.add(s); } }}, {key: 'onWheel', value: function(t, e) { if (this.fancybox.state === 'ready' && !1 !== this.fancybox.trigger('Image.wheel', e)) switch (this.fancybox.option('Image.wheel')) { case 'zoom':t.state === 'done' && t.Panzoom && t.Panzoom.zoomWithWheel(e); break; case 'close':this.fancybox.close(); break; case 'slide':this.fancybox[e.deltaY < 0 ? 'prev' : 'next'](); } }}, {key: 'onClick', value: function(t, e) { const i = this; if (this.fancybox.state === 'ready') { const n = t.Panzoom; if (!n || !n.dragPosition.midPoint && n.dragOffset.x === 0 && n.dragOffset.y === 0 && n.dragOffset.scale === 1) { if (this.fancybox.Carousel.Panzoom.lockAxis) return !1; const o = function(n) { switch (n) { case 'toggleZoom':e.stopPropagation(), t.Panzoom && t.Panzoom.zoomWithClick(e); break; case 'close':i.fancybox.close(); break; case 'next':e.stopPropagation(), i.fancybox.next(); } }; const a = this.fancybox.option('Image.click'); const s = this.fancybox.option('Image.doubleClick'); s ? this.clickTimer ? (clearTimeout(this.clickTimer), this.clickTimer = null, o(s)) : this.clickTimer = setTimeout(() => { i.clickTimer = null, o(a); }, 300) : o(a); } } }}, {key: 'onPageChange', value: function(t, e) { const i = t.getSlide(); e.slides.forEach(t => { t.Panzoom && t.state === 'done' && t.index !== i.index && t.Panzoom.panTo({x: 0, y: 0, scale: 1, friction: .8}); }); }}, {key: 'attach', value: function() { this.fancybox.on(this.events); }}, {key: 'detach', value: function() { this.fancybox.off(this.events); }}]), t; }()); K.defaults = {canZoomInClass: 'can-zoom_in', canZoomOutClass: 'can-zoom_out', zoom: !0, zoomOpacity: 'auto', zoomFriction: .82, ignoreCoveredThumbnail: !1, touch: !0, click: 'toggleZoom', doubleClick: null, wheel: 'zoom', fit: 'contain', wrap: !1, Panzoom: {ratio: 1}}; const J = (function() { function t(e) { o(this, t), this.fancybox = e; for (let i = 0, n = ['onChange', 'onClosing']; i < n.length; i++) { const a = n[i]; this[a] = this[a].bind(this); } this.events = {initCarousel: this.onChange, 'Carousel.change': this.onChange, closing: this.onClosing}, this.hasCreatedHistory = !1, this.origHash = '', this.timer = null; } return s(t, [{key: 'onChange', value: function(t) { const e = this; const i = t.Carousel; this.timer && clearTimeout(this.timer); const n = i.prevPage === null; const o = t.getSlide(); const a = new URL(document.URL).hash; let s = !1; if (o.slug)s = '#' + o.slug; else { const r = o.$trigger && o.$trigger.dataset; const l = t.option('slug') || r && r.fancybox; l && l.length && l !== 'true' && (s = '#' + l + (i.slides.length > 1 ? '-' + (o.index + 1) : '')); }n && (this.origHash = a !== s ? a : ''), s && a !== s && (this.timer = setTimeout(() => { try { window.history[n ? 'pushState' : 'replaceState']({}, document.title, window.location.pathname + window.location.search + s), n && (e.hasCreatedHistory = !0); } catch (t) {} }, 300)); }}, {key: 'onClosing', value: function() { if (this.timer && clearTimeout(this.timer), !0 !== this.hasSilentClose) try { return void window.history.replaceState({}, document.title, window.location.pathname + window.location.search + (this.origHash || '')); } catch (t) {} }}, {key: 'attach', value: function(t) { t.on(this.events); }}, {key: 'detach', value: function(t) { t.off(this.events); }}], [{key: 'startFromUrl', value: function() { const e = t.Fancybox; if (e && !e.getInstance() && !1 !== e.defaults.Hash) { const i = t.getParsedURL(); const n = i.hash; const o = i.slug; const a = i.index; if (o) { let s = document.querySelector('[data-slug="'.concat(n, '"]')); if (s && s.dispatchEvent(new CustomEvent('click', {bubbles: !0, cancelable: !0})), !e.getInstance()) { const r = document.querySelectorAll('[data-fancybox="'.concat(o, '"]')); r.length && (a === null && r.length === 1 ? s = r[0] : a && (s = r[a - 1]), s && s.dispatchEvent(new CustomEvent('click', {bubbles: !0, cancelable: !0}))); } } } }}, {key: 'onHashChange', value: function() { const e = t.getParsedURL(); const i = e.slug; const n = e.index; const o = t.Fancybox; const a = o && o.getInstance(); if (a && a.plugins.Hash) { if (i) { const s = a.Carousel; if (i === a.option('slug')) return s.slideTo(n - 1); let r; const l = x(s.slides); try { for (l.s(); !(r = l.n()).done;) { const c = r.value; if (c.slug && c.slug === i) return s.slideTo(c.index); } } catch (t) { l.e(t); } finally { l.f(); } const h = a.getSlide(); const d = h.$trigger && h.$trigger.dataset; if (d && d.fancybox === i) return s.slideTo(n - 1); }a.plugins.Hash.hasSilentClose = !0, a.close(); }t.startFromUrl(); }}, {key: 'create', value: function(e) { function i() { window.addEventListener('hashchange', t.onHashChange, !1), t.startFromUrl(); }t.Fancybox = e, H && window.requestAnimationFrame(() => { /complete|interactive|loaded/.test(document.readyState) ? i() : document.addEventListener('DOMContentLoaded', i); }); }}, {key: 'destroy', value: function() { window.removeEventListener('hashchange', t.onHashChange, !1); }}, {key: 'getParsedURL', value: function() { const t = window.location.hash.substr(1); const e = t.split('-'); const i = e.length > 1 && /^\+?\d+$/.test(e[e.length - 1]) && parseInt(e.pop(-1), 10) || null; return {hash: t, slug: e.join('-'), index: i}; }}]), t; }()); var Q = {pageXOffset: 0, pageYOffset: 0, element: function() { return document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement; }, activate: function(t) { Q.pageXOffset = window.pageXOffset, Q.pageYOffset = window.pageYOffset, t.requestFullscreen ? t.requestFullscreen() : t.mozRequestFullScreen ? t.mozRequestFullScreen() : t.webkitRequestFullscreen ? t.webkitRequestFullscreen() : t.msRequestFullscreen && t.msRequestFullscreen(); }, deactivate: function() { document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen && document.webkitExitFullscreen(); }}; const tt = (function() { function t(e) { o(this, t), this.fancybox = e, this.active = !1, this.handleVisibilityChange = this.handleVisibilityChange.bind(this); } return s(t, [{key: 'isActive', value: function() { return this.active; }}, {key: 'setTimer', value: function() { const t = this; if (this.active && !this.timer) { const e = this.fancybox.option('slideshow.delay', 3e3); this.timer = setTimeout(() => { t.timer = null, t.fancybox.option('infinite') || t.fancybox.getSlide().index !== t.fancybox.Carousel.slides.length - 1 ? t.fancybox.next() : t.fancybox.jumpTo(0, {friction: 0}); }, e); let i = this.$progress; i || ((i = document.createElement('div')).classList.add('fancybox__progress'), this.fancybox.$carousel.parentNode.insertBefore(i, this.fancybox.$carousel), this.$progress = i, i.offsetHeight), i.style.transitionDuration = ''.concat(e, 'ms'), i.style.transform = 'scaleX(1)'; } }}, {key: 'clearTimer', value: function() { clearTimeout(this.timer), this.timer = null, this.$progress && (this.$progress.style.transitionDuration = '', this.$progress.style.transform = '', this.$progress.offsetHeight); }}, {key: 'activate', value: function() { this.active || (this.active = !0, this.fancybox.$container.classList.add('has-slideshow'), this.fancybox.getSlide().state === 'done' && this.setTimer(), document.addEventListener('visibilitychange', this.handleVisibilityChange, !1)); }}, {key: 'handleVisibilityChange', value: function() { this.deactivate(); }}, {key: 'deactivate', value: function() { this.active = !1, this.clearTimer(), this.fancybox.$container.classList.remove('has-slideshow'), document.removeEventListener('visibilitychange', this.handleVisibilityChange, !1); }}, {key: 'toggle', value: function() { this.active ? this.deactivate() : this.fancybox.Carousel.slides.length > 1 && this.activate(); }}]), t; }()); const et = {display: ['counter', 'zoom', 'slideshow', 'fullscreen', 'thumbs', 'close'], autoEnable: !0, items: {counter: {position: 'left', type: 'div', class: 'fancybox__counter', html: '<span data-fancybox-index=""></span>&nbsp;/&nbsp;<span data-fancybox-count=""></span>', attr: {tabindex: -1}}, prev: {type: 'button', class: 'fancybox__button--prev', label: 'PREV', html: '<svg viewBox="0 0 24 24"><path d="M15 4l-8 8 8 8"/></svg>', attr: {'data-fancybox-prev': ''}}, next: {type: 'button', class: 'fancybox__button--next', label: 'NEXT', html: '<svg viewBox="0 0 24 24"><path d="M8 4l8 8-8 8"/></svg>', attr: {'data-fancybox-next': ''}}, fullscreen: {type: 'button', class: 'fancybox__button--fullscreen', label: 'TOGGLE_FULLSCREEN', html: '<svg viewBox="0 0 24 24">\n                <g><path d="M3 8 V3h5"></path><path d="M21 8V3h-5"></path><path d="M8 21H3v-5"></path><path d="M16 21h5v-5"></path></g>\n                <g><path d="M7 2v5H2M17 2v5h5M2 17h5v5M22 17h-5v5"/></g>\n            </svg>', click: function(t) { t.preventDefault(), Q.element() ? Q.deactivate() : Q.activate(this.fancybox.$container); }}, slideshow: {type: 'button', class: 'fancybox__button--slideshow', label: 'TOGGLE_SLIDESHOW', html: '<svg viewBox="0 0 24 24">\n                <g><path d="M6 4v16"/><path d="M20 12L6 20"/><path d="M20 12L6 4"/></g>\n                <g><path d="M7 4v15M17 4v15"/></g>\n            </svg>', click: function(t) { t.preventDefault(), this.Slideshow.toggle(); }}, zoom: {type: 'button', class: 'fancybox__button--zoom', label: 'TOGGLE_ZOOM', html: '<svg viewBox="0 0 24 24"><circle cx="10" cy="10" r="7"></circle><path d="M16 16 L21 21"></svg>', click: function(t) { t.preventDefault(); const e = this.fancybox.getSlide().Panzoom; e && e.toggleZoom(); }}, download: {type: 'link', label: 'DOWNLOAD', class: 'fancybox__button--download', html: '<svg viewBox="0 0 24 24"><path d="M12 15V3m0 12l-4-4m4 4l4-4M2 17l.62 2.48A2 2 0 004.56 21h14.88a2 2 0 001.94-1.51L22 17"/></svg>', click: function(t) { t.stopPropagation(); }}, thumbs: {type: 'button', label: 'TOGGLE_THUMBS', class: 'fancybox__button--thumbs', html: '<svg viewBox="0 0 24 24"><circle cx="4" cy="4" r="1" /><circle cx="12" cy="4" r="1" transform="rotate(90 12 4)"/><circle cx="20" cy="4" r="1" transform="rotate(90 20 4)"/><circle cx="4" cy="12" r="1" transform="rotate(90 4 12)"/><circle cx="12" cy="12" r="1" transform="rotate(90 12 12)"/><circle cx="20" cy="12" r="1" transform="rotate(90 20 12)"/><circle cx="4" cy="20" r="1" transform="rotate(90 4 20)"/><circle cx="12" cy="20" r="1" transform="rotate(90 12 20)"/><circle cx="20" cy="20" r="1" transform="rotate(90 20 20)"/></svg>', click: function(t) { t.stopPropagation(); const e = this.fancybox.plugins.Thumbs; e && e.toggle(); }}, close: {type: 'button', label: 'CLOSE', class: 'fancybox__button--close', html: '<svg viewBox="0 0 24 24"><path d="M20 20L4 4m16 0L4 20"></path></svg>', attr: {'data-fancybox-close': '', tabindex: 0}}}}; const it = (function() { function t(e) { const i = this; o(this, t), this.fancybox = e, this.$container = null, this.state = 'init'; for (let n = 0, a = ['onInit', 'onPrepare', 'onDone', 'onKeydown', 'onClosing', 'onChange', 'onSettle', 'onRefresh']; n < a.length; n++) { const s = a[n]; this[s] = this[s].bind(this); } this.events = {init: this.onInit, prepare: this.onPrepare, done: this.onDone, keydown: this.onKeydown, closing: this.onClosing, 'Carousel.change': this.onChange, 'Carousel.settle': this.onSettle, 'Carousel.Panzoom.touchStart': function() { return i.onRefresh(); }, 'Image.startAnimation': function(t, e) { return i.onRefresh(e); }, 'Image.afterUpdate': function(t, e) { return i.onRefresh(e); }}; } return s(t, [{key: 'onInit', value: function() { if (this.fancybox.option('Toolbar.autoEnable')) { let t; let e = !1; const i = x(this.fancybox.items); try { for (i.s(); !(t = i.n()).done;) { if (t.value.type === 'image') { e = !0; break; } } } catch (t) { i.e(t); } finally { i.f(); } if (!e) return void(this.state = 'disabled'); } let n; const o = x(this.fancybox.option('Toolbar.display')); try { for (o.s(); !(n = o.n()).done;) { const a = n.value; if ((w(a) ? a.id : a) === 'close') { this.fancybox.options.closeButton = !1; break; } } } catch (t) { o.e(t); } finally { o.f(); } }}, {key: 'onPrepare', value: function() { const t = this.fancybox; if (this.state === 'init' && (this.build(), this.update(), this.Slideshow = new tt(t), !t.Carousel.prevPage && (t.option('slideshow.autoStart') && this.Slideshow.activate(), t.option('fullscreen.autoStart') && !Q.element()))) try { Q.activate(t.$container); } catch (t) {} }}, {key: 'onFsChange', value: function() { window.scrollTo(Q.pageXOffset, Q.pageYOffset); }}, {key: 'onSettle', value: function() { const t = this.fancybox; const e = this.Slideshow; e && e.isActive() && (t.getSlide().index !== t.Carousel.slides.length - 1 || t.option('infinite') ? t.getSlide().state === 'done' && e.setTimer() : e.deactivate()); }}, {key: 'onChange', value: function() { this.update(), this.Slideshow && this.Slideshow.isActive() && this.Slideshow.clearTimer(); }}, {key: 'onDone', value: function(t, e) { const i = this.Slideshow; e.index === t.getSlide().index && (this.update(), i && i.isActive() && (t.option('infinite') || e.index !== t.Carousel.slides.length - 1 ? i.setTimer() : i.deactivate())); }}, {key: 'onRefresh', value: function(t) { t && t.index !== this.fancybox.getSlide().index || (this.update(), !this.Slideshow || !this.Slideshow.isActive() || t && t.state !== 'done' || this.Slideshow.deactivate()); }}, {key: 'onKeydown', value: function(t, e, i) { e === ' ' && this.Slideshow && (this.Slideshow.toggle(), i.preventDefault()); }}, {key: 'onClosing', value: function() { this.Slideshow && this.Slideshow.deactivate(), document.removeEventListener('fullscreenchange', this.onFsChange); }}, {key: 'createElement', value: function(t) { let e, i; (t.type === 'div' ? e = document.createElement('div') : (e = document.createElement(t.type === 'link' ? 'a' : 'button')).classList.add('carousel__button'), e.innerHTML = t.html, e.setAttribute('tabindex', t.tabindex || 0), t.class) && (i = e.classList).add.apply(i, m(t.class.split(' '))); for (const n in t.attr)e.setAttribute(n, t.attr[n]); t.label && e.setAttribute('title', this.fancybox.localize('{{'.concat(t.label, '}}'))), t.click && e.addEventListener('click', t.click.bind(this)), t.id === 'prev' && e.setAttribute('data-fancybox-prev', ''), t.id === 'next' && e.setAttribute('data-fancybox-next', ''); const o = e.querySelector('svg'); return o && (o.setAttribute('role', 'img'), o.setAttribute('tabindex', '-1'), o.setAttribute('xmlns', 'http://www.w3.org/2000/svg')), e; }}, {key: 'build', value: function() { const t = this; this.cleanup(); let e; const i = this.fancybox.option('Toolbar.items'); const n = [{position: 'left', items: []}, {position: 'center', items: []}, {position: 'right', items: []}]; const o = this.fancybox.plugins.Thumbs; const a = x(this.fancybox.option('Toolbar.display')); try { const s = function() { const a = e.value; let s = void 0; let r = void 0; if (w(a) ? (s = a.id, r = k({}, i[s], a)) : r = i[s = a], ['counter', 'next', 'prev', 'slideshow'].includes(s) && t.fancybox.items.length < 2) return 'continue'; if (s === 'fullscreen') { if (!document.fullscreenEnabled || window.fullScreen) return 'continue'; document.addEventListener('fullscreenchange', t.onFsChange); } if (s === 'thumbs' && (!o || o.state === 'disabled')) return 'continue'; if (!r) return 'continue'; const l = r.position || 'right'; const c = n.find(t => { return t.position === l; }); c && c.items.push(r); }; for (a.s(); !(e = a.n()).done;)s(); } catch (t) { a.e(t); } finally { a.f(); } const r = document.createElement('div'); r.classList.add('fancybox__toolbar'); for (let l = 0, c = n; l < c.length; l++) { const h = c[l]; if (h.items.length) { const d = document.createElement('div'); d.classList.add('fancybox__toolbar__items'), d.classList.add('fancybox__toolbar__items--'.concat(h.position)); var u; const f = x(h.items); try { for (f.s(); !(u = f.n()).done;) { const v = u.value; d.appendChild(this.createElement(v)); } } catch (t) { f.e(t); } finally { f.f(); }r.appendChild(d); } } this.fancybox.$carousel.parentNode.insertBefore(r, this.fancybox.$carousel), this.$container = r; }}, {key: 'update', value: function() { let t; const e = this.fancybox.getSlide(); const i = e.index; const n = this.fancybox.items.length; const o = e.downloadSrc || (e.type !== 'image' || e.error ? null : e.src); const a = x(this.fancybox.$container.querySelectorAll('a.fancybox__button--download')); try { for (a.s(); !(t = a.n()).done;) { const s = t.value; o ? (s.removeAttribute('disabled'), s.removeAttribute('tabindex'), s.setAttribute('href', o), s.setAttribute('download', o), s.setAttribute('target', '_blank')) : (s.setAttribute('disabled', ''), s.setAttribute('tabindex', -1), s.removeAttribute('href'), s.removeAttribute('download')); } } catch (t) { a.e(t); } finally { a.f(); } let r; const l = e.Panzoom; const c = l && l.option('maxScale') > l.option('baseScale'); const h = x(this.fancybox.$container.querySelectorAll('.fancybox__button--zoom')); try { for (h.s(); !(r = h.n()).done;) { const d = r.value; c ? d.removeAttribute('disabled') : d.setAttribute('disabled', ''); } } catch (t) { h.e(t); } finally { h.f(); } let u; const f = x(this.fancybox.$container.querySelectorAll('[data-fancybox-index]')); try { for (f.s(); !(u = f.n()).done;) { u.value.innerHTML = e.index + 1; } } catch (t) { f.e(t); } finally { f.f(); } let v; const p = x(this.fancybox.$container.querySelectorAll('[data-fancybox-count]')); try { for (p.s(); !(v = p.n()).done;) { v.value.innerHTML = n; } } catch (t) { p.e(t); } finally { p.f(); } if (!this.fancybox.option('infinite')) { let g; const m = x(this.fancybox.$container.querySelectorAll('[data-fancybox-prev]')); try { for (m.s(); !(g = m.n()).done;) { const y = g.value; i === 0 ? y.setAttribute('disabled', '') : y.removeAttribute('disabled'); } } catch (t) { m.e(t); } finally { m.f(); } let b; const w = x(this.fancybox.$container.querySelectorAll('[data-fancybox-next]')); try { for (w.s(); !(b = w.n()).done;) { const k = b.value; i === n - 1 ? k.setAttribute('disabled', '') : k.removeAttribute('disabled'); } } catch (t) { w.e(t); } finally { w.f(); } } }}, {key: 'cleanup', value: function() { this.Slideshow && this.Slideshow.isActive() && this.Slideshow.clearTimer(), this.$container && this.$container.remove(), this.$container = null; }}, {key: 'attach', value: function() { this.fancybox.on(this.events); }}, {key: 'detach', value: function() { this.fancybox.off(this.events), this.cleanup(); }}]), t; }()); it.defaults = et; const nt = {ScrollLock: U, Thumbs: Y, Html: G, Toolbar: it, Image: K, Hash: J}; const ot = {startIndex: 0, preload: 1, infinite: !0, showClass: 'fancybox-zoomInUp', hideClass: 'fancybox-fadeOut', animated: !0, hideScrollbar: !0, parentEl: null, mainClass: null, autoFocus: !0, trapFocus: !0, placeFocusBack: !0, click: 'close', closeButton: 'inside', dragToClose: !0, keyboard: {Escape: 'close', Delete: 'close', Backspace: 'close', PageUp: 'next', PageDown: 'prev', ArrowUp: 'next', ArrowDown: 'prev', ArrowRight: 'next', ArrowLeft: 'prev'}, template: {closeButton: '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" tabindex="-1"><path d="M20 20L4 4m16 0L4 20"/></svg>', spinner: '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="25 25 50 50" tabindex="-1"><circle cx="50" cy="50" r="20"/></svg>', main: null}, l10n: {CLOSE: 'Close', NEXT: 'Next', PREV: 'Previous', MODAL: 'You can close this modal content with the ESC key', ERROR: 'Something Went Wrong, Please Try Again Later', IMAGE_ERROR: 'Image Not Found', ELEMENT_NOT_FOUND: 'HTML Element Not Found', AJAX_NOT_FOUND: 'Error Loading AJAX : Not Found', AJAX_FORBIDDEN: 'Error Loading AJAX : Forbidden', IFRAME_ERROR: 'Error Loading Page', TOGGLE_ZOOM: 'Toggle zoom level', TOGGLE_THUMBS: 'Toggle thumbnails', TOGGLE_SLIDESHOW: 'Toggle slideshow', TOGGLE_FULLSCREEN: 'Toggle full-screen mode', DOWNLOAD: 'Download'}}; const at = new Map(); let st = 0; const rt = (function(t) { l(i, t); const e = f(i); function i(t) { let n; const a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; return o(this, i), t = t.map(t => { return t.width && (t._width = t.width), t.height && (t._height = t.height), t; }), (n = e.call(this, k(!0, {}, ot, a))).bindHandlers(), n.state = 'init', n.setItems(t), n.attachPlugins(i.Plugins), n.trigger('init'), !0 === n.option('hideScrollbar') && n.hideScrollbar(), n.initLayout(), n.initCarousel(), n.attachEvents(), at.set(n.id, d(n)), n.trigger('prepare'), n.state = 'ready', n.trigger('ready'), n.$container.setAttribute('aria-hidden', 'false'), n.option('trapFocus') && n.focus(), n; } return s(i, [{key: 'option', value: function(t) { for (var e, n = this.getSlide(), o = n ? n[t] : void 0, a = arguments.length, s = new Array(a > 1 ? a - 1 : 0), r = 1; r < a; r++)s[r - 1] = arguments[r]; if (void 0 !== o) { let l; if (typeof o === 'function')o = (l = o).call.apply(l, [this, this].concat(s)); return o; } return (e = p(c(i.prototype), 'option', this)).call.apply(e, [this, t].concat(s)); }}, {key: 'bindHandlers', value: function() { for (let t = 0, e = ['onMousedown', 'onKeydown', 'onClick', 'onFocus', 'onCreateSlide', 'onSettle', 'onTouchMove', 'onTouchEnd', 'onTransform']; t < e.length; t++) { const i = e[t]; this[i] = this[i].bind(this); } }}, {key: 'attachEvents', value: function() { document.addEventListener('mousedown', this.onMousedown), document.addEventListener('keydown', this.onKeydown, !0), this.option('trapFocus') && document.addEventListener('focus', this.onFocus, !0), this.$container.addEventListener('click', this.onClick); }}, {key: 'detachEvents', value: function() { document.removeEventListener('mousedown', this.onMousedown), document.removeEventListener('keydown', this.onKeydown, !0), document.removeEventListener('focus', this.onFocus, !0), this.$container.removeEventListener('click', this.onClick); }}, {key: 'initLayout', value: function() { const t = this; this.$root = this.option('parentEl') || document.body; const e = this.option('template.main'); e && (this.$root.insertAdjacentHTML('beforeend', this.localize(e)), this.$container = this.$root.querySelector('.fancybox__container')), this.$container || (this.$container = document.createElement('div'), this.$root.appendChild(this.$container)), this.$container.onscroll = function() { return t.$container.scrollLeft = 0, !1; }, Object.entries({class: 'fancybox__container', role: 'dialog', tabIndex: '-1', 'aria-modal': 'true', 'aria-hidden': 'true', 'aria-label': this.localize('{{MODAL}}')}).forEach(e => { let i; return (i = t.$container).setAttribute.apply(i, m(e)); }), this.option('animated') && this.$container.classList.add('is-animated'), this.$backdrop = this.$container.querySelector('.fancybox__backdrop'), this.$backdrop || (this.$backdrop = document.createElement('div'), this.$backdrop.classList.add('fancybox__backdrop'), this.$container.appendChild(this.$backdrop)), this.$carousel = this.$container.querySelector('.fancybox__carousel'), this.$carousel || (this.$carousel = document.createElement('div'), this.$carousel.classList.add('fancybox__carousel'), this.$container.appendChild(this.$carousel)), this.$container.Fancybox = this, this.id = this.$container.getAttribute('id'), this.id || (this.id = this.options.id || ++st, this.$container.setAttribute('id', 'fancybox-' + this.id)); let i; const n = this.option('mainClass'); n && (i = this.$container.classList).add.apply(i, m(n.split(' '))); return document.documentElement.classList.add('with-fancybox'), this.trigger('initLayout'), this; }}, {key: 'setItems', value: function(t) { let e; const i = []; const n = x(t); try { for (n.s(); !(e = n.n()).done;) { const o = e.value; const a = o.$trigger; if (a) { const s = a.dataset || {}; o.src = s.src || a.getAttribute('href') || o.src, o.type = s.type || o.type, !o.src && a instanceof HTMLImageElement && (o.src = a.currentSrc || o.$trigger.src); } let r = o.$thumb; if (!r) { const l = o.$trigger && o.$trigger.origTarget; l && (r = l instanceof HTMLImageElement ? l : l.querySelector('img:not([aria-hidden])')), !r && o.$trigger && (r = o.$trigger instanceof HTMLImageElement ? o.$trigger : o.$trigger.querySelector('img:not([aria-hidden])')); }o.$thumb = r || null; let c = o.thumb; !c && r && !(c = r.currentSrc || r.src) && r.dataset && (c = r.dataset.lazySrc || r.dataset.src), c || o.type !== 'image' || (c = o.src), o.thumb = c || null, o.caption = o.caption || '', i.push(o); } } catch (t) { n.e(t); } finally { n.f(); } this.items = i; }}, {key: 'initCarousel', value: function() { const t = this; return this.Carousel = new W(this.$carousel, k(!0, {}, {prefix: '', classNames: {viewport: 'fancybox__viewport', track: 'fancybox__track', slide: 'fancybox__slide'}, textSelection: !0, preload: this.option('preload'), friction: .88, slides: this.items, initialPage: this.options.startIndex, slidesPerPage: 1, infiniteX: this.option('infinite'), infiniteY: !0, l10n: this.option('l10n'), Dots: !1, Navigation: {classNames: {main: 'fancybox__nav', button: 'carousel__button', next: 'is-next', prev: 'is-prev'}}, Panzoom: {textSelection: !0, panOnlyZoomed: function() { return t.Carousel && t.Carousel.pages && t.Carousel.pages.length < 2 && !t.option('dragToClose'); }, lockAxis: function() { if (t.Carousel) { let e = 'x'; return t.option('dragToClose') && (e += 'y'), e; } }}, on: {'*': function(e) { for (var i = arguments.length, n = new Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++)n[o - 1] = arguments[o]; return t.trigger.apply(t, ['Carousel.'.concat(e)].concat(n)); }, init: function(e) { return t.Carousel = e; }, createSlide: this.onCreateSlide, settle: this.onSettle}}, this.option('Carousel'))), this.option('dragToClose') && this.Carousel.Panzoom.on({touchMove: this.onTouchMove, afterTransform: this.onTransform, touchEnd: this.onTouchEnd}), this.trigger('initCarousel'), this; }}, {key: 'onCreateSlide', value: function(t, e) { let i = e.caption || ''; if (typeof this.options.caption === 'function' && (i = this.options.caption.call(this, this, this.Carousel, e)), typeof i === 'string' && i.length) { const n = document.createElement('div'); const o = 'fancybox__caption_'.concat(this.id, '_').concat(e.index); n.className = 'fancybox__caption', n.innerHTML = i, n.setAttribute('id', o), e.$caption = e.$el.appendChild(n), e.$el.classList.add('has-caption'), e.$el.setAttribute('aria-labelledby', o); } }}, {key: 'onSettle', value: function() { this.option('autoFocus') && this.focus(); }}, {key: 'onFocus', value: function(t) { this.focus(t); }}, {key: 'onClick', value: function(t) { if (!t.defaultPrevented) { const e = t.composedPath()[0]; if (e.matches('[data-fancybox-close]')) return t.preventDefault(), void i.close(!1, t); if (e.matches('[data-fancybox-next]')) return t.preventDefault(), void i.next(); if (e.matches('[data-fancybox-prev]')) return t.preventDefault(), void i.prev(); if (e.matches(X) || document.activeElement.blur(), !e.closest('.fancybox__content')) if (!getSelection().toString().length) if (!1 !== this.trigger('click', t)) switch (this.option('click')) { case 'close':this.close(); break; case 'next':this.next(); } } }}, {key: 'onTouchMove', value: function() { const t = this.getSlide().Panzoom; return !t || t.content.scale === 1; }}, {key: 'onTouchEnd', value: function(t) { const e = t.dragOffset.y; Math.abs(e) >= 150 || Math.abs(e) >= 35 && t.dragOffset.time < 350 ? (this.option('hideClass') && (this.getSlide().hideClass = 'fancybox-throwOut'.concat(t.content.y < 0 ? 'Up' : 'Down')), this.close()) : t.lockAxis === 'y' && t.panTo({y: 0}); }}, {key: 'onTransform', value: function(t) { if (this.$backdrop) { const e = Math.abs(t.content.y); const i = e < 1 ? '' : Math.max(.33, Math.min(1, 1 - e / t.content.fitHeight * 1.5)); this.$container.style.setProperty('--fancybox-ts', i ? '0s' : ''), this.$container.style.setProperty('--fancybox-opacity', i); } }}, {key: 'onMousedown', value: function() { this.state === 'ready' && document.body.classList.add('is-using-mouse'); }}, {key: 'onKeydown', value: function(t) { if (i.getInstance().id === this.id) { document.body.classList.remove('is-using-mouse'); const e = t.key; const n = this.option('keyboard'); if (n && !t.ctrlKey && !t.altKey && !t.shiftKey) { const o = t.composedPath()[0]; const a = document.activeElement && document.activeElement.classList; const s = a && a.contains('carousel__button'); if (e !== 'Escape' && !s) if (t.target.isContentEditable || ['BUTTON', 'TEXTAREA', 'OPTION', 'INPUT', 'SELECT', 'VIDEO'].indexOf(o.nodeName) !== -1) return; if (!1 !== this.trigger('keydown', e, t)) { const r = n[e]; typeof this[r] === 'function' && this[r](); } } } }}, {key: 'getSlide', value: function() { const t = this.Carousel; if (!t) return null; const e = t.page === null ? t.option('initialPage') : t.page; const i = t.pages || []; return i.length && i[e] ? i[e].slides[0] : null; }}, {key: 'focus', value: function(t) { if (!(i.ignoreFocusChange || ['init', 'closing', 'customClosing', 'destroy'].indexOf(this.state) > -1)) { const e = this.$container; const n = this.getSlide(); const o = n.state === 'done' ? n.$el : null; if (!o || !o.contains(document.activeElement)) { t && t.preventDefault(), i.ignoreFocusChange = !0; for (var a, s = [], r = 0, l = Array.from(e.querySelectorAll(X)); r < l.length; r++) { const c = l[r]; const h = c.offsetParent; const d = o && o.contains(c); const u = !this.Carousel.$viewport.contains(c); h && (d || u) ? (s.push(c), void 0 !== c.dataset.origTabindex && (c.tabIndex = c.dataset.origTabindex, c.removeAttribute('data-orig-tabindex')), (c.hasAttribute('autoFocus') || !a && d && !c.classList.contains('carousel__button')) && (a = c)) : (c.dataset.origTabindex = void 0 === c.dataset.origTabindex ? c.getAttribute('tabindex') : c.dataset.origTabindex, c.tabIndex = -1); }t ? s.indexOf(t.target) > -1 ? this.lastFocus = t.target : this.lastFocus === e ? q(s[s.length - 1]) : q(e) : this.option('autoFocus') && a ? q(a) : s.indexOf(document.activeElement) < 0 && q(e), this.lastFocus = document.activeElement, i.ignoreFocusChange = !1; } } }}, {key: 'hideScrollbar', value: function() { if (H) { const t = window.innerWidth - document.documentElement.getBoundingClientRect().width; const e = 'fancybox-style-noscroll'; let i = document.getElementById(e); i || t > 0 && ((i = document.createElement('style')).id = e, i.type = 'text/css', i.innerHTML = '.compensate-for-scrollbar {padding-right: '.concat(t, 'px;}'), document.getElementsByTagName('head')[0].appendChild(i), document.body.classList.add('compensate-for-scrollbar')); } }}, {key: 'revealScrollbar', value: function() { document.body.classList.remove('compensate-for-scrollbar'); const t = document.getElementById('fancybox-style-noscroll'); t && t.remove(); }}, {key: 'clearContent', value: function(t) { this.Carousel.trigger('removeSlide', t), t.$content && (t.$content.remove(), t.$content = null), t.$closeButton && (t.$closeButton.remove(), t.$closeButton = null), t._className && t.$el.classList.remove(t._className); }}, {key: 'setContent', value: function(t, e) { let i; const n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}; const o = t.$el; if (e instanceof HTMLElement)['img', 'iframe', 'video', 'audio'].indexOf(e.nodeName.toLowerCase()) > -1 ? (i = document.createElement('div')).appendChild(e) : i = e; else { const a = document.createRange().createContextualFragment(e); (i = document.createElement('div')).appendChild(a); } if (t.filter && !t.error && (i = i.querySelector(t.filter)), i instanceof Element) return t._className = 'has-'.concat(n.suffix || t.type || 'unknown'), o.classList.add(t._className), i.classList.add('fancybox__content'), i.style.display !== 'none' && getComputedStyle(i).getPropertyValue('display') !== 'none' || (i.style.display = t.display || this.option('defaultDisplay') || 'flex'), t.id && i.setAttribute('id', t.id), t.$content = i, o.prepend(i), this.manageCloseButton(t), t.state !== 'loading' && this.revealContent(t), i; this.setError(t, '{{ELEMENT_NOT_FOUND}}'); }}, {key: 'manageCloseButton', value: function(t) { const e = this; const i = void 0 === t.closeButton ? this.option('closeButton') : t.closeButton; if (i && (i !== 'top' || !this.$closeButton)) { const n = document.createElement('button'); n.classList.add('carousel__button', 'is-close'), n.setAttribute('title', this.options.l10n.CLOSE), n.innerHTML = this.option('template.closeButton'), n.addEventListener('click', t => { return e.close(t); }), i === 'inside' ? (t.$closeButton && t.$closeButton.remove(), t.$closeButton = t.$content.appendChild(n)) : this.$closeButton = this.$container.insertBefore(n, this.$container.firstChild); } }}, {key: 'revealContent', value: function(t) { const e = this; this.trigger('reveal', t), t.$content.style.visibility = ''; let i = !1; t.error || t.state === 'loading' || this.Carousel.prevPage !== null || t.index !== this.options.startIndex || (i = void 0 === t.showClass ? this.option('showClass') : t.showClass), i ? (t.state = 'animating', this.animateCSS(t.$content, i, () => { e.done(t); })) : this.done(t); }}, {key: 'animateCSS', value: function(t, e, i) { if (t && t.dispatchEvent(new CustomEvent('animationend', {bubbles: !0, cancelable: !0})), t && e) { t.addEventListener('animationend', function n(o) { o.currentTarget === this && (t.removeEventListener('animationend', n), i && i(), t.classList.remove(e)); }), t.classList.add(e); } else typeof i === 'function' && i(); }}, {key: 'done', value: function(t) { t.state = 'done', this.trigger('done', t); const e = this.getSlide(); e && t.index === e.index && this.option('autoFocus') && this.focus(); }}, {key: 'setError', value: function(t, e) { t.error = e, this.hideLoading(t), this.clearContent(t); const i = document.createElement('div'); i.classList.add('fancybox-error'), i.innerHTML = this.localize(e || '<p>{{ERROR}}</p>'), this.setContent(t, i, {suffix: 'error'}); }}, {key: 'showLoading', value: function(t) { const e = this; t.state = 'loading', t.$el.classList.add('is-loading'); let i = t.$el.querySelector('.fancybox__spinner'); i || ((i = document.createElement('div')).classList.add('fancybox__spinner'), i.innerHTML = this.option('template.spinner'), i.addEventListener('click', () => { e.Carousel.Panzoom.velocity || e.close(); }), t.$el.prepend(i)); }}, {key: 'hideLoading', value: function(t) { const e = t.$el && t.$el.querySelector('.fancybox__spinner'); e && (e.remove(), t.$el.classList.remove('is-loading')), t.state === 'loading' && (this.trigger('load', t), t.state = 'ready'); }}, {key: 'next', value: function() { const t = this.Carousel; t && t.pages.length > 1 && t.slideNext(); }}, {key: 'prev', value: function() { const t = this.Carousel; t && t.pages.length > 1 && t.slidePrev(); }}, {key: 'jumpTo', value: function() { let t; this.Carousel && (t = this.Carousel).slideTo.apply(t, arguments); }}, {key: 'close', value: function(t) { const e = this; if (t && t.preventDefault(), !['closing', 'customClosing', 'destroy'].includes(this.state) && !1 !== this.trigger('shouldClose', t) && (this.state = 'closing', this.Carousel.Panzoom.destroy(), this.detachEvents(), this.trigger('closing', t), this.state !== 'destroy')) { this.$container.setAttribute('aria-hidden', 'true'), this.$container.classList.add('is-closing'); const i = this.getSlide(); if (this.Carousel.slides.forEach(t => { t.$content && t.index !== i.index && e.Carousel.trigger('removeSlide', t); }), this.state === 'closing') { const n = void 0 === i.hideClass ? this.option('hideClass') : i.hideClass; this.animateCSS(i.$content, n, () => { e.destroy(); }, !0); } } }}, {key: 'destroy', value: function() { if (this.state !== 'destroy') { this.state = 'destroy', this.trigger('destroy'); const t = this.option('placeFocusBack') ? this.getSlide().$trigger : null; this.Carousel.destroy(), this.detachPlugins(), this.Carousel = null, this.options = {}, this.events = {}, this.$container.remove(), this.$container = this.$backdrop = this.$carousel = null, t && q(t), at.delete(this.id); const e = i.getInstance(); e ? e.focus() : (document.documentElement.classList.remove('with-fancybox'), document.body.classList.remove('is-using-mouse'), this.revealScrollbar()); } }}], [{key: 'show', value: function(t) { const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; return new i(t, e); }}, {key: 'fromEvent', value: function(t) { const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; if (!t.defaultPrevented && !(t.button && t.button !== 0 || t.ctrlKey || t.metaKey || t.shiftKey)) { let n, o, a; const s = t.composedPath()[0]; let r = s; if ((r.matches('[data-fancybox-trigger]') || (r = r.closest('[data-fancybox-trigger]'))) && (n = r && r.dataset && r.dataset.fancyboxTrigger), n) { const l = document.querySelectorAll('[data-fancybox="'.concat(n, '"]')); const c = parseInt(r.dataset.fancyboxIndex, 10) || 0; r = l.length ? l[c] : r; }r || (r = s), Array.from(i.openers.keys()).reverse().some(e => { a = r; let i = !1; try { a instanceof Element && (typeof e === 'string' || e instanceof String) && (i = a.matches(e) || (a = a.closest(e))); } catch (t) {} return !!i && (t.preventDefault(), o = e, !0); }); let h = !1; if (o) { e.event = t, e.target = a, a.origTarget = s, h = i.fromOpener(o, e); const d = i.getInstance(); d && d.state === 'ready' && t.detail && document.body.classList.add('is-using-mouse'); } return h; } }}, {key: 'fromOpener', value: function(t) { let e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; const n = function(t) { for (var e = ['false', '0', 'no', 'null', 'undefined'], i = ['true', '1', 'yes'], n = Object.assign({}, t.dataset), o = {}, a = 0, s = Object.entries(n); a < s.length; a++) { const r = g(s[a], 2); const l = r[0]; const c = r[1]; if (l !== 'fancybox') if (l === 'width' || l === 'height')o['_'.concat(l)] = c; else if (typeof c === 'string' || c instanceof String) if (e.indexOf(c) > -1)o[l] = !1; else if (i.indexOf(o[l]) > -1)o[l] = !0; else try { o[l] = JSON.parse(c); } catch (t) { o[l] = c; } else o[l] = c; } return t instanceof Element && (o.$trigger = t), o; }; let o = []; let a = e.startIndex || 0; const s = e.target || null; const r = void 0 !== (e = k({}, e, i.openers.get(t))).groupAll && e.groupAll; const l = void 0 === e.groupAttr ? 'data-fancybox' : e.groupAttr; const c = l && s ? s.getAttribute(''.concat(l)) : ''; if (!s || c || r) { const h = e.root || (s ? s.getRootNode() : document.body); o = [].slice.call(h.querySelectorAll(t)); } if (s && !r && (o = c ? o.filter(t => { return t.getAttribute(''.concat(l)) === c; }) : [s]), !o.length) return !1; const d = i.getInstance(); return !(d && o.indexOf(d.options.$trigger) > -1) && (a = s ? o.indexOf(s) : a, new i(o = o.map(n), k({}, e, {startIndex: a, $trigger: s}))); }}, {key: 'bind', value: function(t) { const e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}; function n() { document.body.addEventListener('click', i.fromEvent, !1); }H && (i.openers.size || (/complete|interactive|loaded/.test(document.readyState) ? n() : document.addEventListener('DOMContentLoaded', n)), i.openers.set(t, e)); }}, {key: 'unbind', value: function(t) { i.openers.delete(t), i.openers.size || i.destroy(); }}, {key: 'destroy', value: function() { for (var t; t = i.getInstance();)t.destroy(); i.openers = new Map(), document.body.removeEventListener('click', i.fromEvent, !1); }}, {key: 'getInstance', value: function(t) { return t ? at.get(t) : Array.from(at.values()).reverse().find(t => { return !['closing', 'customClosing', 'destroy'].includes(t.state) && t; }) || null; }}, {key: 'close', value: function() { const t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]; const e = arguments.length > 1 ? arguments[1] : void 0; if (t) { let n; const o = x(at.values()); try { for (o.s(); !(n = o.n()).done;) { const a = n.value; a.close(e); } } catch (t) { o.e(t); } finally { o.f(); } } else { const s = i.getInstance(); s && s.close(e); } }}, {key: 'next', value: function() { const t = i.getInstance(); t && t.next(); }}, {key: 'prev', value: function() { const t = i.getInstance(); t && t.prev(); }}]), i; }(O)); rt.version = '4.0.26', rt.defaults = ot, rt.openers = new Map(), rt.Plugins = nt, rt.bind('[data-fancybox]'); for (let lt = 0, ct = Object.entries(rt.Plugins || {}); lt < ct.length; lt++) { const ht = g(ct[lt], 2); ht[0]; const dt = ht[1]; typeof dt.create === 'function' && dt.create(rt); }t.Carousel = W, t.Fancybox = rt, t.Panzoom = M; }));
